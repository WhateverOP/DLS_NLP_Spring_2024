{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1q77WixYXvCFQtvRD-RbCQe7zC06hn7d7","timestamp":1708365361858},{"file_id":"12BxEICwjMhOcIQID1zn06K6kFG92GZcf","timestamp":1708035269638},{"file_id":"1pYR9hzeFxq1T5kZThLvgA7bkmcNQtbrq","timestamp":1707661673565}],"gpuType":"T4"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"b944dacf40fe47769b64a964d40c7d1a":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_a4575ae2b9ee4f5a895c36c4525b56ef","IPY_MODEL_d9444501aeab49e4bc543ae7ff35bd0f","IPY_MODEL_2072b640f80a4b18b55a9868cde8e5eb"],"layout":"IPY_MODEL_71341465934c452588378ab98ba66647"}},"a4575ae2b9ee4f5a895c36c4525b56ef":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_9113ea200dde4607ad04b5264eedb932","placeholder":"​","style":"IPY_MODEL_a45ec55b4a2748acbc919f903b093dc8","value":"config.json: 100%"}},"d9444501aeab49e4bc543ae7ff35bd0f":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_636d578b3107478b825fa35689c306da","max":483,"min":0,"orientation":"horizontal","style":"IPY_MODEL_89021ffc1321472fba8283c37f5f0019","value":483}},"2072b640f80a4b18b55a9868cde8e5eb":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_4432321ba88248ecbd78b9b5a235449f","placeholder":"​","style":"IPY_MODEL_76bd0ce4032b40ec9833cb036c1096b5","value":" 483/483 [00:00&lt;00:00, 25.9kB/s]"}},"71341465934c452588378ab98ba66647":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9113ea200dde4607ad04b5264eedb932":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a45ec55b4a2748acbc919f903b093dc8":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"636d578b3107478b825fa35689c306da":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"89021ffc1321472fba8283c37f5f0019":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"4432321ba88248ecbd78b9b5a235449f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"76bd0ce4032b40ec9833cb036c1096b5":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"6c13acf622534b0e9e901d90614c282c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3423f457ad3849ed97f2477be5d1d3be":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"319f1b64796e40f08affbc82f3580038":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bd02c3aaf82a4da3ba9551eca40ad537":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"121de647501945159e8e7baa76b294f4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a85b01dfd3b54049aaedd8bea97b1977":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"1be0d85f0ad34d8483426a589662bb16":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_319f1b64796e40f08affbc82f3580038","placeholder":"​","style":"IPY_MODEL_bd02c3aaf82a4da3ba9551eca40ad537","value":"model.safetensors: 100%"}},"2f97b9e11d7b4fb0817b22566300e201":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_6c13acf622534b0e9e901d90614c282c","max":267954768,"min":0,"orientation":"horizontal","style":"IPY_MODEL_3423f457ad3849ed97f2477be5d1d3be","value":267954768}},"23f00d530af84aa88a1d0e352503bdb4":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_121de647501945159e8e7baa76b294f4","placeholder":"​","style":"IPY_MODEL_a85b01dfd3b54049aaedd8bea97b1977","value":" 268M/268M [00:01&lt;00:00, 181MB/s]"}},"c84912a7ab6f4852a2690bfac05e8cbf":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"acb3fa0b05564b63b5d79da805dbcb03":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_1be0d85f0ad34d8483426a589662bb16","IPY_MODEL_2f97b9e11d7b4fb0817b22566300e201","IPY_MODEL_23f00d530af84aa88a1d0e352503bdb4"],"layout":"IPY_MODEL_c84912a7ab6f4852a2690bfac05e8cbf"}},"15c3aa5b40684e22bdd708872580fa29":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6a804109d3dd41cda0ce80b435c6a41f":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"ccf732b92c5a4b86b210cc4e30299bcb":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c53b08ff747c4097939cb21ccef133f4":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"5997705736174087a17c34acd4df674a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"cec1b75f89954b20935e3ef249cdad38":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"8ddfc6fc4c164dfe97930b4af4242bc8":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ccf732b92c5a4b86b210cc4e30299bcb","placeholder":"​","style":"IPY_MODEL_c53b08ff747c4097939cb21ccef133f4","value":"tokenizer_config.json: 100%"}},"8ea512312d5d445cb0d781fa1421642f":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_15c3aa5b40684e22bdd708872580fa29","max":28,"min":0,"orientation":"horizontal","style":"IPY_MODEL_6a804109d3dd41cda0ce80b435c6a41f","value":28}},"44fce6c95cd94bc0b52c1132525cbc65":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_5997705736174087a17c34acd4df674a","placeholder":"​","style":"IPY_MODEL_cec1b75f89954b20935e3ef249cdad38","value":" 28.0/28.0 [00:00&lt;00:00, 1.96kB/s]"}},"fd8d270ad4224dc7940648bdbe67d9fe":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b5717033ccc541af9bcbe54a198460fa":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_8ddfc6fc4c164dfe97930b4af4242bc8","IPY_MODEL_8ea512312d5d445cb0d781fa1421642f","IPY_MODEL_44fce6c95cd94bc0b52c1132525cbc65"],"layout":"IPY_MODEL_fd8d270ad4224dc7940648bdbe67d9fe"}},"0245fce72cea495e8b2ceff4fb7d32a9":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d2a75752d0be421fb1863cd255b268a3":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"9cfd7376f50d452fb15ba27b1886416e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4d1e5da4e8ef44c9847891d77d329a10":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"a6fe3f4c6c134577a768ecd150fb4cdc":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a3b91b30fce843139d75b4d97ca94ed6":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"3941c20ef2904ea1a3e6c845cccd44fa":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_9cfd7376f50d452fb15ba27b1886416e","placeholder":"​","style":"IPY_MODEL_4d1e5da4e8ef44c9847891d77d329a10","value":"vocab.txt: 100%"}},"e448526ce901444197631b6f6ac11800":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_0245fce72cea495e8b2ceff4fb7d32a9","max":231508,"min":0,"orientation":"horizontal","style":"IPY_MODEL_d2a75752d0be421fb1863cd255b268a3","value":231508}},"a80b8e0fa74e4b9ca676253459f92b6e":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_a6fe3f4c6c134577a768ecd150fb4cdc","placeholder":"​","style":"IPY_MODEL_a3b91b30fce843139d75b4d97ca94ed6","value":" 232k/232k [00:00&lt;00:00, 5.90MB/s]"}},"e099b497cf7340de8f3dbbdb79c973c3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3d6fed8e552f46e29f3547981f3d84f6":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_3941c20ef2904ea1a3e6c845cccd44fa","IPY_MODEL_e448526ce901444197631b6f6ac11800","IPY_MODEL_a80b8e0fa74e4b9ca676253459f92b6e"],"layout":"IPY_MODEL_e099b497cf7340de8f3dbbdb79c973c3"}},"c30f8751729141ddb1d6a81e3882f423":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c4d64618ad27498a9699d31e9e92fb92":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"0ea12846579d4545988c8ad3f3d42a33":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5050aae6ce4d4403b9664089d443b8f7":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"740fa02986a349518658072939c82dae":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b390a35279934b54b1a34dce76215c3e":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d2eddb601ef94ddc80357ad22ee0aa06":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_0ea12846579d4545988c8ad3f3d42a33","placeholder":"​","style":"IPY_MODEL_5050aae6ce4d4403b9664089d443b8f7","value":"tokenizer.json: 100%"}},"bc29ab497c3e4237808d2f76b21ebc49":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_c30f8751729141ddb1d6a81e3882f423","max":466062,"min":0,"orientation":"horizontal","style":"IPY_MODEL_c4d64618ad27498a9699d31e9e92fb92","value":466062}},"290e91dfca2647ddac8d324e550e5698":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_740fa02986a349518658072939c82dae","placeholder":"​","style":"IPY_MODEL_b390a35279934b54b1a34dce76215c3e","value":" 466k/466k [00:00&lt;00:00, 23.3MB/s]"}},"dc6fa3a937a3465da3674dc0a54238b2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"adb2baed42484e3191df3f0fee9119a4":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_d2eddb601ef94ddc80357ad22ee0aa06","IPY_MODEL_bc29ab497c3e4237808d2f76b21ebc49","IPY_MODEL_290e91dfca2647ddac8d324e550e5698"],"layout":"IPY_MODEL_dc6fa3a937a3465da3674dc0a54238b2"}},"39264b48b77c4e7895471c1db0da1443":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_616001cf068d40e58730a2e55870820a","IPY_MODEL_d4ae908dea9b4cc1b16a241e95846f48","IPY_MODEL_b4ebcf9851214e1d8ef052258abf0da1"],"layout":"IPY_MODEL_8f89ae2cadb44a0daf178d6e596d7412"}},"616001cf068d40e58730a2e55870820a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_dfcd0f489d2240c8b68a76ffc44e879a","placeholder":"​","style":"IPY_MODEL_d463ebffc0714e9494b31f42d169eb8f","value":"epoch:  20%"}},"d4ae908dea9b4cc1b16a241e95846f48":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"danger","description":"","description_tooltip":null,"layout":"IPY_MODEL_aebe79ef2bd94ee7a84e93d73f95b9d3","max":10,"min":0,"orientation":"horizontal","style":"IPY_MODEL_32a5fb063481413b957e3c03316a2e71","value":2}},"b4ebcf9851214e1d8ef052258abf0da1":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_a12403c901654aa7b5fb31fd11127f29","placeholder":"​","style":"IPY_MODEL_1e5b0a4500024a0eab86127832906f6b","value":" 2/10 [00:40&lt;02:11, 16.42s/it]"}},"8f89ae2cadb44a0daf178d6e596d7412":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"dfcd0f489d2240c8b68a76ffc44e879a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d463ebffc0714e9494b31f42d169eb8f":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"aebe79ef2bd94ee7a84e93d73f95b9d3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"32a5fb063481413b957e3c03316a2e71":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"a12403c901654aa7b5fb31fd11127f29":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1e5b0a4500024a0eab86127832906f6b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"422dd35edcf5459a8cc60ea52f85da70":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_e5e259e8570b47a3ade0a4700df3c8b6","IPY_MODEL_f1ff779801554e25827499a2c6f033db","IPY_MODEL_3a9e88e2ddca41c7844891d3653100a8"],"layout":"IPY_MODEL_76b4f07a316c47cfbf3b796e76c6267c"}},"e5e259e8570b47a3ade0a4700df3c8b6":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_990a0ebfe8d440efbc3e6d4534a6ca6b","placeholder":"​","style":"IPY_MODEL_62754ab69a924f0f8d7346dfb82376b7","value":"epoch: 100%"}},"f1ff779801554e25827499a2c6f033db":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_e0223ef03d6a49f7bbf0eea054168e39","max":10,"min":0,"orientation":"horizontal","style":"IPY_MODEL_7bd668c5a6db4d828f9aba8b9a0a9079","value":10}},"3a9e88e2ddca41c7844891d3653100a8":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_9456d655d7c841f0b013ec1bd459b1d3","placeholder":"​","style":"IPY_MODEL_239e85c279844ed19069ec5b110d07d8","value":" 10/10 [02:48&lt;00:00, 16.49s/it]"}},"76b4f07a316c47cfbf3b796e76c6267c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"990a0ebfe8d440efbc3e6d4534a6ca6b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"62754ab69a924f0f8d7346dfb82376b7":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e0223ef03d6a49f7bbf0eea054168e39":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7bd668c5a6db4d828f9aba8b9a0a9079":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"9456d655d7c841f0b013ec1bd459b1d3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"239e85c279844ed19069ec5b110d07d8":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"46ac339ffa8446d3912425f5ca0ff0ef":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_7813c5b1cc3240f9a3c60b0d9b6769eb","IPY_MODEL_8e8cdd8da2d5453d881343a23ce46007","IPY_MODEL_5ca9b32d412c483e838f8cfa580bf481"],"layout":"IPY_MODEL_42b88f0587634c0ab64406e1ee540ee6"}},"7813c5b1cc3240f9a3c60b0d9b6769eb":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_55a3c5015e3d4ffe99181558e9d36e5e","placeholder":"​","style":"IPY_MODEL_0e8b5f758ee54000aea069d3b13fb2bf","value":"tokenizer_config.json: 100%"}},"8e8cdd8da2d5453d881343a23ce46007":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_ea338ab3dcc24b0aa9c92aab7d4ae30f","max":341,"min":0,"orientation":"horizontal","style":"IPY_MODEL_968b62a2f82b40d0aefca09363e51426","value":341}},"5ca9b32d412c483e838f8cfa580bf481":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_b516838142b44ae4a98208f51ffc6946","placeholder":"​","style":"IPY_MODEL_8ae360ac892a4151a2bfaf0e7ef2ea33","value":" 341/341 [00:00&lt;00:00, 24.2kB/s]"}},"42b88f0587634c0ab64406e1ee540ee6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"55a3c5015e3d4ffe99181558e9d36e5e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0e8b5f758ee54000aea069d3b13fb2bf":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ea338ab3dcc24b0aa9c92aab7d4ae30f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"968b62a2f82b40d0aefca09363e51426":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"b516838142b44ae4a98208f51ffc6946":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8ae360ac892a4151a2bfaf0e7ef2ea33":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"23e99d47305b4eff8cd25cb9ed866ec2":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_f2b76f0b17224373a2e961a9e9b30be0","IPY_MODEL_55b548cb6a8845c6bf49f4e17dbef249","IPY_MODEL_1968b6d16d534830854ef44909ea0e83"],"layout":"IPY_MODEL_4c2a553c2395478ca73649299ffcfe01"}},"f2b76f0b17224373a2e961a9e9b30be0":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_9d3635e2c58348b3b226306041c6c490","placeholder":"​","style":"IPY_MODEL_e20bcbb2b2a8487791a62d3207c9d720","value":"config.json: 100%"}},"55b548cb6a8845c6bf49f4e17dbef249":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_6cf3e143f77541a79ddbdb9917129af4","max":632,"min":0,"orientation":"horizontal","style":"IPY_MODEL_ce05e7b6a22246a1997427d05ae7cb19","value":632}},"1968b6d16d534830854ef44909ea0e83":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_4d94ed7bc1554192b191777c968709a6","placeholder":"​","style":"IPY_MODEL_a496705132b0428d9910704b4e2e1b9d","value":" 632/632 [00:00&lt;00:00, 50.6kB/s]"}},"4c2a553c2395478ca73649299ffcfe01":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9d3635e2c58348b3b226306041c6c490":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e20bcbb2b2a8487791a62d3207c9d720":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"6cf3e143f77541a79ddbdb9917129af4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ce05e7b6a22246a1997427d05ae7cb19":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"4d94ed7bc1554192b191777c968709a6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a496705132b0428d9910704b4e2e1b9d":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"8017e8ee4ae5432aa73095b31803ee0b":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_b019066ad3794980971908f8226d8d3a","IPY_MODEL_302b58ea049e4e8ea6560a1ef5f22d06","IPY_MODEL_189f601913ba424eb8b445ec74122e47"],"layout":"IPY_MODEL_f2b8da9b941c4e45bdda003285119e2f"}},"b019066ad3794980971908f8226d8d3a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_8f0a42bfc66b47d3bf2a12f06832fce4","placeholder":"​","style":"IPY_MODEL_4865e91f78314fc7840cf05143d82689","value":"vocab.txt: 100%"}},"302b58ea049e4e8ea6560a1ef5f22d06":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_935b477213bd4fb3b660442428e8e61f","max":241082,"min":0,"orientation":"horizontal","style":"IPY_MODEL_3349e86c5f6d4e1b821595cccfd23f8e","value":241082}},"189f601913ba424eb8b445ec74122e47":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_cb74a99530b046979579a3535d34b1b1","placeholder":"​","style":"IPY_MODEL_b910f62120f34cfbb3cd5b6d3d57d31a","value":" 241k/241k [00:00&lt;00:00, 16.8MB/s]"}},"f2b8da9b941c4e45bdda003285119e2f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8f0a42bfc66b47d3bf2a12f06832fce4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4865e91f78314fc7840cf05143d82689":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"935b477213bd4fb3b660442428e8e61f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3349e86c5f6d4e1b821595cccfd23f8e":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"cb74a99530b046979579a3535d34b1b1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b910f62120f34cfbb3cd5b6d3d57d31a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"85afe327b836466f9b304ad5478b47a9":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_f975ae5234be4077b77dc16aead9b3bd","IPY_MODEL_325ca87a15724a50ad72e09fdbaa80fb","IPY_MODEL_3dac40e5c06b40aba6f357757a529276"],"layout":"IPY_MODEL_5f6c0f9c4b74466b831f3377522269fa"}},"f975ae5234be4077b77dc16aead9b3bd":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_bbe5d3445db748bc86ea2b216b7c3d47","placeholder":"​","style":"IPY_MODEL_be5dcd7d45cd47ae82fa46417c0ce3c4","value":"tokenizer.json: 100%"}},"325ca87a15724a50ad72e09fdbaa80fb":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_f6c91cf3a3804ad49b3f357217c1be7c","max":468145,"min":0,"orientation":"horizontal","style":"IPY_MODEL_9203197884b2453fa5dcdc1e13199142","value":468145}},"3dac40e5c06b40aba6f357757a529276":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_fbdcc4f29127413a90b32092c5bc41d1","placeholder":"​","style":"IPY_MODEL_802aa70deb4e4df588d22d15e6f543f4","value":" 468k/468k [00:00&lt;00:00, 28.6MB/s]"}},"5f6c0f9c4b74466b831f3377522269fa":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bbe5d3445db748bc86ea2b216b7c3d47":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"be5dcd7d45cd47ae82fa46417c0ce3c4":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"f6c91cf3a3804ad49b3f357217c1be7c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9203197884b2453fa5dcdc1e13199142":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"fbdcc4f29127413a90b32092c5bc41d1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"802aa70deb4e4df588d22d15e6f543f4":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"2fdcf4f79fee493b8a5c417db87f258a":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_fc880ae987234984807270e46461e32d","IPY_MODEL_3478260bce1a4097bb4d417123fee2b9","IPY_MODEL_62b8e7c5d0574007998e46293a80df0a"],"layout":"IPY_MODEL_308c9d276c144bf9b522517fc88e2d00"}},"fc880ae987234984807270e46461e32d":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_0123229384eb496da090215aca2d529b","placeholder":"​","style":"IPY_MODEL_c3b09f29fff04012bfff84085a9e1c64","value":"special_tokens_map.json: 100%"}},"3478260bce1a4097bb4d417123fee2b9":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_101059eceae54b43a918e4d6c80b3128","max":112,"min":0,"orientation":"horizontal","style":"IPY_MODEL_a90dfd4603d84a41846014ae6b4785d2","value":112}},"62b8e7c5d0574007998e46293a80df0a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_45793585848b4ae08acb9b2c341eb06b","placeholder":"​","style":"IPY_MODEL_1f2fe85c5dca409f8b6a214b87ac53ff","value":" 112/112 [00:00&lt;00:00, 8.18kB/s]"}},"308c9d276c144bf9b522517fc88e2d00":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0123229384eb496da090215aca2d529b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c3b09f29fff04012bfff84085a9e1c64":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"101059eceae54b43a918e4d6c80b3128":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a90dfd4603d84a41846014ae6b4785d2":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"45793585848b4ae08acb9b2c341eb06b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1f2fe85c5dca409f8b6a214b87ac53ff":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"a254176233f74b5b8fb29085b0035f5c":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_5b53333d8f7546d78eaf77e5b64cf11e","IPY_MODEL_cdac1b0593484cd4b5d836667a1d0333","IPY_MODEL_25b6f36a11bc4479aba9925874020333"],"layout":"IPY_MODEL_09c1ec674da14079ae915f8431e399a9"}},"5b53333d8f7546d78eaf77e5b64cf11e":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c8fc8ea64da045d981c377d6e3af5d00","placeholder":"​","style":"IPY_MODEL_a6bf6f6a9f004992866727eaefc6651e","value":"model.safetensors: 100%"}},"cdac1b0593484cd4b5d836667a1d0333":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_36f73bd2cac741ae87e4db1741ef07c3","max":47661730,"min":0,"orientation":"horizontal","style":"IPY_MODEL_34bfd2af7ae44a56a99603963fcf3940","value":47661730}},"25b6f36a11bc4479aba9925874020333":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_b74d90d87ae345d0b34eb08afa3761c2","placeholder":"​","style":"IPY_MODEL_23c0ecf93046453289ea45b8e3b21158","value":" 47.7M/47.7M [00:00&lt;00:00, 177MB/s]"}},"09c1ec674da14079ae915f8431e399a9":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c8fc8ea64da045d981c377d6e3af5d00":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a6bf6f6a9f004992866727eaefc6651e":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"36f73bd2cac741ae87e4db1741ef07c3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"34bfd2af7ae44a56a99603963fcf3940":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"b74d90d87ae345d0b34eb08afa3761c2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"23c0ecf93046453289ea45b8e3b21158":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"bb0d308eac2540f4b2b5f227ef4cd6ab":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_390c987dd9754547a61b992b0e850c62","IPY_MODEL_61d8bb24fcd844cd827b776ad969049e","IPY_MODEL_5e9690343b7342088eb80a020ef2dc31"],"layout":"IPY_MODEL_90cec0ac464d4d698aadfaf56874e901"}},"390c987dd9754547a61b992b0e850c62":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_4fa3ade98d964495b702f47310377f53","placeholder":"​","style":"IPY_MODEL_249d24635d664ed99fe612b6c07a2bd4","value":"epoch: 100%"}},"61d8bb24fcd844cd827b776ad969049e":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_33adf18a90e54de09d074c049619098b","max":10,"min":0,"orientation":"horizontal","style":"IPY_MODEL_5d6f0256bd3140e68f08a1d236618b24","value":10}},"5e9690343b7342088eb80a020ef2dc31":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_6cd00452043743ccbaca4914dcfbecab","placeholder":"​","style":"IPY_MODEL_c13baf7af19d40ecae2a31b556148e13","value":" 10/10 [00:45&lt;00:00,  4.34s/it]"}},"90cec0ac464d4d698aadfaf56874e901":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4fa3ade98d964495b702f47310377f53":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"249d24635d664ed99fe612b6c07a2bd4":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"33adf18a90e54de09d074c049619098b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5d6f0256bd3140e68f08a1d236618b24":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"6cd00452043743ccbaca4914dcfbecab":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c13baf7af19d40ecae2a31b556148e13":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"c65755385c7a492e852d9000c3f4c25f":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_41e324cb427847a8b7a695055ab832f5","IPY_MODEL_6d5b62feced4447bba0e3caf842c1703","IPY_MODEL_1d622a1d7d9a43dfabdd2cb3cd899024"],"layout":"IPY_MODEL_72d71395112f4e90901b1e260e626553"}},"41e324cb427847a8b7a695055ab832f5":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_9834c5fe740149bf874616959b4ffdec","placeholder":"​","style":"IPY_MODEL_1bc2904bca6b4e348106675a147ce105","value":"epoch: 100%"}},"6d5b62feced4447bba0e3caf842c1703":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_2e37205ddeb647fc9a3c55cee6611315","max":10,"min":0,"orientation":"horizontal","style":"IPY_MODEL_f1aba28eba3e4fa7bd08d00982d7d201","value":10}},"1d622a1d7d9a43dfabdd2cb3cd899024":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_0e893df8bb8b46178bdd76e3cbaed51e","placeholder":"​","style":"IPY_MODEL_88e358eded9348e49818d8a9811762e5","value":" 10/10 [01:00&lt;00:00,  6.54s/it]"}},"72d71395112f4e90901b1e260e626553":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9834c5fe740149bf874616959b4ffdec":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1bc2904bca6b4e348106675a147ce105":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"2e37205ddeb647fc9a3c55cee6611315":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f1aba28eba3e4fa7bd08d00982d7d201":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"0e893df8bb8b46178bdd76e3cbaed51e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"88e358eded9348e49818d8a9811762e5":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"65a58b6b23a24376a0de6ac38da65b04":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_a7d41ac796e34aa2ba933c7c23411792","IPY_MODEL_97debfea2f4d4fefb4a3fc2b473e95a6","IPY_MODEL_05d8bab5f4354c50849e80b82ace5fb6"],"layout":"IPY_MODEL_42cbec63bcb94f72829093878d5a7d3c"}},"a7d41ac796e34aa2ba933c7c23411792":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_1f5807712d02460a8f5f02ae7ab09231","placeholder":"​","style":"IPY_MODEL_4c90417a73044dbda432ab0e1b81a23b","value":"epoch: 100%"}},"97debfea2f4d4fefb4a3fc2b473e95a6":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_3e0d08d0d31b4c7895643931025aab2a","max":10,"min":0,"orientation":"horizontal","style":"IPY_MODEL_da2410c1fbda48f38f13afaa03633d2d","value":10}},"05d8bab5f4354c50849e80b82ace5fb6":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_03b99abe084e4fdc8701e81d727bf684","placeholder":"​","style":"IPY_MODEL_0b31d9bbb5ac47218fcbcceccbfe2756","value":" 10/10 [03:30&lt;00:00, 20.20s/it]"}},"42cbec63bcb94f72829093878d5a7d3c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1f5807712d02460a8f5f02ae7ab09231":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4c90417a73044dbda432ab0e1b81a23b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"3e0d08d0d31b4c7895643931025aab2a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"da2410c1fbda48f38f13afaa03633d2d":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"03b99abe084e4fdc8701e81d727bf684":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0b31d9bbb5ac47218fcbcceccbfe2756":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"cd2f4d029d1a4340ab0a5117d77adf0f":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_6e5fddbb6c7644ea9bbd98f4de084868","IPY_MODEL_237c0ea613a045ecbfe86311fcaf2791","IPY_MODEL_8f58bdb1eded4fb28ce6237b6d3e5223"],"layout":"IPY_MODEL_df86138ece214c8c80a5afddc60ba5b4"}},"6e5fddbb6c7644ea9bbd98f4de084868":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_4392250167794dc2b2da971b68c9b7e9","placeholder":"​","style":"IPY_MODEL_3d510e069b1c495c8cb05a9d6409c1a5","value":"epoch: 100%"}},"237c0ea613a045ecbfe86311fcaf2791":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_61a9ec8e026f4db08e215ed24ba7feea","max":10,"min":0,"orientation":"horizontal","style":"IPY_MODEL_ef53909aef2a4ff5afe972b79d7683c6","value":10}},"8f58bdb1eded4fb28ce6237b6d3e5223":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_89a35610b3724486997177e9e573725c","placeholder":"​","style":"IPY_MODEL_722d40ddbf874d599bfc72236ad4b0f2","value":" 10/10 [03:24&lt;00:00, 19.90s/it]"}},"df86138ece214c8c80a5afddc60ba5b4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4392250167794dc2b2da971b68c9b7e9":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3d510e069b1c495c8cb05a9d6409c1a5":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"61a9ec8e026f4db08e215ed24ba7feea":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ef53909aef2a4ff5afe972b79d7683c6":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"89a35610b3724486997177e9e573725c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"722d40ddbf874d599bfc72236ad4b0f2":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","source":["<p style=\"align: center;\"><img src=\"https://static.tildacdn.com/tild6636-3531-4239-b465-376364646465/Deep_Learning_School.png\" width=\"400\"></p>\n","\n","# Глубокое обучение. Часть 2\n","# Домашнее задание по теме \"Механизм внимания\""],"metadata":{"id":"Ji8KtYOVGs8_"}},{"cell_type":"markdown","source":["Это домашнее задание проходит в формате peer-review. Это означает, что его будут проверять ваши однокурсники. Поэтому пишите разборчивый код, добавляйте комментарии и пишите выводы после проделанной работы.\n","\n","В этом задании вы будете решать задачу классификации математических задач по темам (многоклассовая классификация) с помощью Transformer.\n","\n","В качестве датасета возьмем датасет математических задач по разным темам. Нам необходим следующий файл:\n","\n","[Файл с классами](https://docs.google.com/spreadsheets/d/1IMRxByfg7gjoZ5i7rxvuNDvSrbdOJOc-/edit?usp=drive_link&ouid=104379615679964018037&rtpof=true&sd=true)"],"metadata":{"id":"UAr-M8_1GJ6W"}},{"cell_type":"markdown","source":["**Hint:** не перезаписывайте модели, которые вы получите на каждом из этапов этого дз. Они ещё понадобятся."],"metadata":{"id":"1fybMcmV0YRA"}},{"cell_type":"code","source":["from google.colab import output\n","output.enable_custom_widget_manager()\n","\n","from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uianmuEkjX0I","executionInfo":{"status":"ok","timestamp":1712188634289,"user_tz":-180,"elapsed":33790,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"d9c29f5a-63d2-45e7-97fa-2125a3cac2ba"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["path_to_data = '/content/drive/MyDrive/Deep_Learning_MIPT_2/hw_transformers/data_problems.xlsx'\n","\n","import torch\n","import torch.nn as nn\n","from torch.utils.data import Dataset, DataLoader\n","\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","\n","from tqdm.auto import tqdm\n","from nltk.tokenize import word_tokenize\n","from sklearn.model_selection import train_test_split\n","from sklearn.utils import shuffle\n","from sklearn.metrics import accuracy_score, f1_score, precision_score, recall_score, classification_report, confusion_matrix\n","import nltk\n","\n","from collections import Counter\n","from typing import List\n","import string\n","\n","import random\n","\n","from transformers import DistilBertModel\n","from transformers import DistilBertTokenizer\n","\n","import seaborn as sns\n","sns.set(palette='summer')\n","sns.set(style=\"whitegrid\", font_scale=1.2)\n","\n","device = 'cuda' if torch.cuda.is_available() else 'cpu'\n","print(device)\n","\n","nltk.download('punkt')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"avyH0R2RjZi_","executionInfo":{"status":"ok","timestamp":1712188641363,"user_tz":-180,"elapsed":7079,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"30138fd0-43eb-4288-a2d8-900d92218329"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["cuda\n"]},{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Unzipping tokenizers/punkt.zip.\n"]},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["init_df = pd.read_excel(path_to_data)\n","\n","print(f'init_df.shape = {init_df.shape}')\n","print(f'init_df.keys() = {init_df.keys()}')\n","\n","df = init_df.drop(columns=['Unnamed: 0'])\n","\n","df = df.rename(columns={'Задача': 'text', 'Тема': 'label'})"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7aiuRj1XjZlu","executionInfo":{"status":"ok","timestamp":1712188645324,"user_tz":-180,"elapsed":3969,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"b0c99933-edb3-4c2f-824c-bfc52ab6459b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["init_df.shape = (5273, 3)\n","init_df.keys() = Index(['Unnamed: 0', 'Задача', 'Тема'], dtype='object')\n"]}]},{"cell_type":"code","source":["labels_vocab = list(set(df['label']))\n","label2ind = {char: i for i, char in enumerate(labels_vocab)}\n","ind2label = {i: char for char, i in label2ind.items()}"],"metadata":{"id":"9ZK0wHBGjpII"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.groupby('label').count()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"qI9mejxL2wUJ","executionInfo":{"status":"ok","timestamp":1712188645326,"user_tz":-180,"elapsed":36,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"e5056ea1-b2e3-4cbd-ef2c-2e4c66c2a383"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               text\n","label              \n","Геометрия       371\n","Графы           384\n","Дирихле         441\n","Инвариант       235\n","Комбинаторика  1020\n","Многочлен       426\n","Теория чисел   2396"],"text/html":["\n","  <div id=\"df-dd7c28ea-6e40-4306-824f-cb58cb6da258\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>text</th>\n","    </tr>\n","    <tr>\n","      <th>label</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Геометрия</th>\n","      <td>371</td>\n","    </tr>\n","    <tr>\n","      <th>Графы</th>\n","      <td>384</td>\n","    </tr>\n","    <tr>\n","      <th>Дирихле</th>\n","      <td>441</td>\n","    </tr>\n","    <tr>\n","      <th>Инвариант</th>\n","      <td>235</td>\n","    </tr>\n","    <tr>\n","      <th>Комбинаторика</th>\n","      <td>1020</td>\n","    </tr>\n","    <tr>\n","      <th>Многочлен</th>\n","      <td>426</td>\n","    </tr>\n","    <tr>\n","      <th>Теория чисел</th>\n","      <td>2396</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dd7c28ea-6e40-4306-824f-cb58cb6da258')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-dd7c28ea-6e40-4306-824f-cb58cb6da258 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-dd7c28ea-6e40-4306-824f-cb58cb6da258');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7c545228-e953-4059-a0d2-5eabb9ef17f9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7c545228-e953-4059-a0d2-5eabb9ef17f9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7c545228-e953-4059-a0d2-5eabb9ef17f9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 7,\n  \"fields\": [\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"\\u0413\\u0435\\u043e\\u043c\\u0435\\u0442\\u0440\\u0438\\u044f\",\n          \"\\u0413\\u0440\\u0430\\u0444\\u044b\",\n          \"\\u041c\\u043d\\u043e\\u0433\\u043e\\u0447\\u043b\\u0435\\u043d\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"text\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 766,\n        \"min\": 235,\n        \"max\": 2396,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          371,\n          384,\n          426\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["class WordDataset:\n","    def __init__(self, sentences, tokenizer, max_length=256):\n","        self.data = sentences\n","        self.max_length = max_length\n","        self.tokenizer = tokenizer\n","\n","    def __getitem__(self, idx: int) -> List[int]:\n","        encode = self.tokenizer.encode_plus(self.data.iloc[idx]['text'], max_length=self.max_length, padding='max_length', truncation=True, return_tensors='pt')\n","        tokenized_sentence = encode['input_ids']\n","        attention_mask = encode['attention_mask']\n","\n","        train_sample = {\n","            \"text\": tokenized_sentence,\n","            \"mask\": attention_mask,\n","            \"label\": label2ind[self.data.iloc[idx]['label']]\n","        }\n","\n","        return train_sample\n","\n","    def __len__(self) -> int:\n","        return len(self.data)"],"metadata":{"id":"h4P1GOYeuvhW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_shuffled = shuffle(df)\n","df_train = df_shuffled[:int(len(df_shuffled)*0.8)]\n","df_test  = df_shuffled[int(len(df_shuffled)*0.8):]"],"metadata":{"id":"w0Zyl3dNuvj0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"Wo3L1dsH2VIx"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Задание 1 (2 балла)\n","\n","Напишите кастомный класс для модели трансформера для задачи классификации, использующей в качествке backbone какую-то из моделей huggingface.\n","\n","Т.е. конструктор класса должен принимать на вход название модели и подгружать её из huggingface, а затем использовать в качестве backbone (достаточно возможности использовать в качестве backbone те модели, которые упомянуты в последующих пунктах)"],"metadata":{"id":"t395freCxpOE"}},{"cell_type":"code","source":["### This is just an interface example. You may change it if you want.\n","\n","class TransformerClassificationModel(nn.Module):\n","    def __init__(self, num_classes, backbone):\n","        super(TransformerClassificationModel, self).__init__()\n","        self.backbone = backbone\n","        self.drop = nn.Dropout(p=0.2)\n","        self.fc = nn.Linear(self.backbone.config.hidden_size, num_classes)\n","\n","    def forward(self, inputs, attention_mask):\n","        outputs = self.backbone(input_ids=inputs, attention_mask=attention_mask)\n","        pooled_output = outputs[0][:, 0, :]\n","        output = self.fc(pooled_output)\n","        attention_weights = outputs[-1][-1]\n","        return output, attention_weights\n","\n","    def freeze_backbone(self):\n","        for param in self.backbone.parameters():\n","            param.requires_grad = False\n","\n","    def unfreeze_backbone(self):\n","        for param in self.backbone.parameters():\n","            param.requires_grad = True"],"metadata":{"id":"eX4VGWquyiMx"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Задание 2 (1 балл)\n","\n","Напишите функцию заморозки backbone у модели (если необходимо, возвращайте из функции модель)"],"metadata":{"id":"Vd3kxX6hy0d4"}},{"cell_type":"code","source":["def freeze_backbone_function(model: TransformerClassificationModel):\n","    pass"],"metadata":{"id":"U8IuDosbzKe8"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Задание 3 (2 балла)\n","\n","Напишите функцию, которая будет использована для тренировки (дообучения) трансформера (TransformerClassificationModel). Функция должна поддерживать обучение с замороженным и размороженным backbone."],"metadata":{"id":"kybkw6MSzd-K"}},{"cell_type":"code","source":["# def train_transformer(transformer_model, freeze_backbone=True)\n","#     model = copy.copy(transformer_model)\n","#     ### YOUR CODE IS HERE\n","\n","#     return finetuned_model"],"metadata":{"id":"s-PqK1qE-Cj-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def fit_epoch(model, train_dataloader, criterion, optimizer, freeze_backbone):\n","    running_loss = 0.0\n","    running_acc = 0\n","    processed_size = 0\n","    running_recall = 0\n","    running_precision = 0\n","    batch_counter = 0\n","\n","    for batch in train_dataloader:\n","        input = batch['text'].squeeze(1).to(device)\n","        mask = batch['mask'].squeeze(1).to(device)\n","        labels = batch['label'].to(device)\n","\n","        optimizer.zero_grad()\n","\n","        if freeze_backbone:\n","            model.freeze_backbone()\n","\n","        outputs, attention_weights = model(input, mask)\n","        loss = criterion(outputs, labels)\n","        loss.backward()\n","        optimizer.step()\n","        preds = torch.argmax(outputs, 1)\n","        running_loss += loss.item() * input.size(0)    # inputs.size(0) is a batch size\n","        running_acc += torch.sum(preds == labels.data)\n","        cm = confusion_matrix(labels.data.cpu(), preds.cpu())\n","        running_recall += np.mean(np.diag(cm) / np.sum(cm, axis = 1))\n","        running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","        processed_size += input.size(0)\n","        batch_counter += 1\n","\n","    train_loss = running_loss / processed_size\n","    train_acc = running_acc.cpu().numpy() / processed_size\n","    train_recall = running_recall / batch_counter\n","    train_precision = running_precision / batch_counter\n","\n","    return train_loss, train_acc, train_recall, train_precision"],"metadata":{"id":"JVZtYM6aKPMp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cm = confusion_matrix([0,1,2,3,1,2,0,3], [0,1,2,3,1,2,0,3][::-1])\n","print(cm)\n","recall = np.diag(cm) / np.sum(cm, axis = 1)\n","precision = np.diag(cm) / np.sum(cm, axis = 0)\n","print(f'recall = {recall}')\n","print(f'precision = {precision}')\n","print(f'np.mean(recall) = {np.mean(recall)}')\n","print(f'np.mean(precision) = {np.mean(precision)}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ExHjZAKf_Hqo","executionInfo":{"status":"ok","timestamp":1712188740348,"user_tz":-180,"elapsed":6,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"2f82e5b7-225b-46e1-cc65-ded03f2c8f38"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[0 1 0 1]\n"," [1 0 0 1]\n"," [0 0 2 0]\n"," [1 1 0 0]]\n","recall = [0. 0. 1. 0.]\n","precision = [0. 0. 1. 0.]\n","np.mean(recall) = 0.25\n","np.mean(precision) = 0.25\n"]}]},{"cell_type":"code","source":["def eval_epoch(model, eval_dataloader, criterion):\n","    model.eval()\n","    running_loss = 0.0\n","    running_acc = 0\n","    processed_size = 0\n","    running_recall = 0\n","    running_precision = 0\n","    batch_counter = 0\n","\n","    for batch in eval_dataloader:\n","        input = batch['text'].squeeze(1).to(device)\n","        mask = batch['mask'].squeeze(1).to(device)\n","        labels = batch['label'].to(device)\n","\n","        with torch.set_grad_enabled(False):\n","            outputs, attention_weights = model(input, mask)\n","            loss = criterion(outputs, labels)\n","            preds = torch.argmax(outputs, 1)\n","\n","        running_loss += loss.item() * input.size(0)\n","        running_acc += torch.sum(preds == labels.data)\n","        cm = confusion_matrix(labels.data.cpu(), preds.cpu())\n","        running_recall += np.mean(np.diag(cm) / np.sum(cm, axis = 1))\n","        running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","        processed_size += input.size(0)\n","        batch_counter += 1\n","\n","    eval_loss = running_loss / processed_size\n","    eval_acc = running_acc.double() / processed_size\n","    eval_recall = running_recall / batch_counter\n","    eval_precision = running_precision / batch_counter\n","\n","    return eval_loss, eval_acc, eval_recall, eval_precision"],"metadata":{"id":"oAP26Nui2cYH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import copy\n","\n","def train(df_train, df_test, transformer_model, tokenizer, epochs, batch_size,\n","          learning_rate=1e-3, L2_reg=1e-5, max_length=256, freeze_backbone=True):\n","    train_dataset = WordDataset(df_train, tokenizer, max_length)\n","    eval_dataset = WordDataset(df_test, tokenizer, max_length)\n","\n","    train_dataloader = DataLoader(train_dataset, shuffle=True, batch_size=batch_size)\n","    eval_dataloader = DataLoader(eval_dataset, shuffle=False, batch_size=batch_size)\n","\n","\n","    model = copy.copy(transformer_model)\n","    history = []\n","    log_template = \"\\nEpoch {ep:03d} \\\n","    \\ntrain_loss: {t_loss:0.4f} eval_loss {v_loss:0.4f} \\\n","    \\ntrain_acc {t_acc:0.4f} eval_acc {v_acc:0.4f} \\\n","    \\ntrain_rec {t_rec:0.4f} eval_rec {v_rec:0.4f} \\\n","    \\ntrain_pre {t_pre:0.4f} eval_pre {v_pre:0.4f}\"\n","\n","    with tqdm(desc=\"epoch\", total=epochs) as pbar_outer:\n","        opt = torch.optim.Adam(model.parameters(), lr=learning_rate, weight_decay=L2_reg)\n","        criterion = nn.CrossEntropyLoss()\n","\n","        for epoch in range(epochs):\n","            train_loss, train_acc, train_recall, train_precision = fit_epoch(model, train_dataloader, criterion, opt, freeze_backbone=True)\n","            # print(\"loss\", train_loss)\n","\n","            eval_loss, eval_acc, eval_recall, eval_precision = eval_epoch(model, eval_dataloader, criterion)\n","            history.append((train_loss, train_acc, train_recall, train_precision, eval_loss, eval_acc, eval_recall, eval_precision))\n","\n","            pbar_outer.update(1)\n","            tqdm.write(log_template.format(ep=epoch+1, t_loss=train_loss, v_loss=eval_loss, t_acc=train_acc, v_acc=eval_acc,\n","                                           t_rec=train_recall, v_rec=eval_recall, t_pre=train_precision, v_pre=eval_precision))\n","\n","    return history"],"metadata":{"id":"EDhrD0BHzxi4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def predict(df_test, transformer_model, tokenizer, batch_size, max_length):\n","    test_dataset = WordDataset(df_test, tokenizer, max_length)\n","    test_dataloader = DataLoader(test_dataset, shuffle=False, batch_size=batch_size)\n","\n","    model = copy.copy(transformer_model)\n","    with torch.no_grad():\n","        logits = []\n","        attention_weights = []\n","        inputs = []\n","        labels = []\n","        probs = []\n","\n","        for batch in test_dataloader:\n","            input = batch['text'].squeeze(1).to(device)\n","            mask = batch['mask'].squeeze(1).to(device)\n","            label = batch['label'].to(device)\n","\n","            model.eval()\n","\n","            output, attention_weight = model(input, mask)\n","            output = output.cpu()\n","            attention_weight = attention_weight\n","            input = input.cpu()\n","            label = label.cpu()\n","\n","            logits.append(output)\n","            attention_weights.append(attention_weight)\n","            inputs.append(input)\n","            labels.append(label)\n","            probs.append(nn.functional.softmax(torch.FloatTensor(output), dim=-1).numpy())\n","\n","    # probs = nn.functional.softmax(torch.cat(logits), dim=-1).numpy()\n","    # probs = [t.numpy() for t in nn.functional.softmax(torch.FloatTensor(logits), dim=-1)]\n","    return probs, attention_weights, inputs, labels"],"metadata":{"id":"wRN467Mc04Ru"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["DistilBERT_backbone = DistilBertModel.from_pretrained('distilbert-base-uncased', output_attentions=True)\n","DistilBert_tokenizer = DistilBertTokenizer.from_pretrained('distilbert-base-uncased')"],"metadata":{"id":"bXa3A7j-CS2M","executionInfo":{"status":"ok","timestamp":1712188795207,"user_tz":-180,"elapsed":9447,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"colab":{"base_uri":"https://localhost:8080/","height":306,"referenced_widgets":["b944dacf40fe47769b64a964d40c7d1a","a4575ae2b9ee4f5a895c36c4525b56ef","d9444501aeab49e4bc543ae7ff35bd0f","2072b640f80a4b18b55a9868cde8e5eb","71341465934c452588378ab98ba66647","9113ea200dde4607ad04b5264eedb932","a45ec55b4a2748acbc919f903b093dc8","636d578b3107478b825fa35689c306da","89021ffc1321472fba8283c37f5f0019","4432321ba88248ecbd78b9b5a235449f","76bd0ce4032b40ec9833cb036c1096b5","6c13acf622534b0e9e901d90614c282c","3423f457ad3849ed97f2477be5d1d3be","319f1b64796e40f08affbc82f3580038","bd02c3aaf82a4da3ba9551eca40ad537","121de647501945159e8e7baa76b294f4","a85b01dfd3b54049aaedd8bea97b1977","1be0d85f0ad34d8483426a589662bb16","2f97b9e11d7b4fb0817b22566300e201","23f00d530af84aa88a1d0e352503bdb4","c84912a7ab6f4852a2690bfac05e8cbf","acb3fa0b05564b63b5d79da805dbcb03","15c3aa5b40684e22bdd708872580fa29","6a804109d3dd41cda0ce80b435c6a41f","ccf732b92c5a4b86b210cc4e30299bcb","c53b08ff747c4097939cb21ccef133f4","5997705736174087a17c34acd4df674a","cec1b75f89954b20935e3ef249cdad38","8ddfc6fc4c164dfe97930b4af4242bc8","8ea512312d5d445cb0d781fa1421642f","44fce6c95cd94bc0b52c1132525cbc65","fd8d270ad4224dc7940648bdbe67d9fe","b5717033ccc541af9bcbe54a198460fa","0245fce72cea495e8b2ceff4fb7d32a9","d2a75752d0be421fb1863cd255b268a3","9cfd7376f50d452fb15ba27b1886416e","4d1e5da4e8ef44c9847891d77d329a10","a6fe3f4c6c134577a768ecd150fb4cdc","a3b91b30fce843139d75b4d97ca94ed6","3941c20ef2904ea1a3e6c845cccd44fa","e448526ce901444197631b6f6ac11800","a80b8e0fa74e4b9ca676253459f92b6e","e099b497cf7340de8f3dbbdb79c973c3","3d6fed8e552f46e29f3547981f3d84f6","c30f8751729141ddb1d6a81e3882f423","c4d64618ad27498a9699d31e9e92fb92","0ea12846579d4545988c8ad3f3d42a33","5050aae6ce4d4403b9664089d443b8f7","740fa02986a349518658072939c82dae","b390a35279934b54b1a34dce76215c3e","d2eddb601ef94ddc80357ad22ee0aa06","bc29ab497c3e4237808d2f76b21ebc49","290e91dfca2647ddac8d324e550e5698","dc6fa3a937a3465da3674dc0a54238b2","adb2baed42484e3191df3f0fee9119a4"]},"outputId":"efbb8ced-04e8-4a5a-a8a5-47bd67d1c6c8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/huggingface_hub/utils/_token.py:88: UserWarning: \n","The secret `HF_TOKEN` does not exist in your Colab secrets.\n","To authenticate with the Hugging Face Hub, create a token in your settings tab (https://huggingface.co/settings/tokens), set it as secret in your Google Colab and restart your session.\n","You will be able to reuse this secret in all of your notebooks.\n","Please note that authentication is recommended but still optional to access public models or datasets.\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["config.json:   0%|          | 0.00/483 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"b944dacf40fe47769b64a964d40c7d1a"}},"metadata":{"application/vnd.jupyter.widget-view+json":{"colab":{"custom_widget_manager":{"url":"https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/2b70e893a8ba7c0f/manager.min.js"}}}}},{"output_type":"display_data","data":{"text/plain":["model.safetensors:   0%|          | 0.00/268M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"acb3fa0b05564b63b5d79da805dbcb03"}},"metadata":{"application/vnd.jupyter.widget-view+json":{"colab":{"custom_widget_manager":{"url":"https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/2b70e893a8ba7c0f/manager.min.js"}}}}},{"output_type":"display_data","data":{"text/plain":["tokenizer_config.json:   0%|          | 0.00/28.0 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"b5717033ccc541af9bcbe54a198460fa"}},"metadata":{"application/vnd.jupyter.widget-view+json":{"colab":{"custom_widget_manager":{"url":"https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/2b70e893a8ba7c0f/manager.min.js"}}}}},{"output_type":"display_data","data":{"text/plain":["vocab.txt:   0%|          | 0.00/232k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"3d6fed8e552f46e29f3547981f3d84f6"}},"metadata":{"application/vnd.jupyter.widget-view+json":{"colab":{"custom_widget_manager":{"url":"https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/2b70e893a8ba7c0f/manager.min.js"}}}}},{"output_type":"display_data","data":{"text/plain":["tokenizer.json:   0%|          | 0.00/466k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"adb2baed42484e3191df3f0fee9119a4"}},"metadata":{"application/vnd.jupyter.widget-view+json":{"colab":{"custom_widget_manager":{"url":"https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/2b70e893a8ba7c0f/manager.min.js"}}}}}]},{"cell_type":"markdown","source":["# ---------------------------------------- DistilBERT freezed ----------------------------------------"],"metadata":{"id":"Y4SNZiuszp9U"}},{"cell_type":"code","source":["model_DistilBERT_freezed = TransformerClassificationModel(len(label2ind), DistilBERT_backbone).to(device)"],"metadata":{"id":"CaEh-2D3203p"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["history_DistilBERT_freezed = train(df_train, df_test, model_DistilBERT_freezed, DistilBert_tokenizer,\n","                                   epochs=10, batch_size=64, learning_rate=1e-3, L2_reg=1e-3, max_length=32, freeze_backbone=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"referenced_widgets":["39264b48b77c4e7895471c1db0da1443","616001cf068d40e58730a2e55870820a","d4ae908dea9b4cc1b16a241e95846f48","b4ebcf9851214e1d8ef052258abf0da1","8f89ae2cadb44a0daf178d6e596d7412","dfcd0f489d2240c8b68a76ffc44e879a","d463ebffc0714e9494b31f42d169eb8f","aebe79ef2bd94ee7a84e93d73f95b9d3","32a5fb063481413b957e3c03316a2e71","a12403c901654aa7b5fb31fd11127f29","1e5b0a4500024a0eab86127832906f6b"]},"id":"06tU-UFyy-Bu","executionInfo":{"status":"error","timestamp":1712189308595,"user_tz":-180,"elapsed":38673,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"dcd07ee5-5812-4bc4-832b-0aca3ce539be"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["epoch:   0%|          | 0/10 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"39264b48b77c4e7895471c1db0da1443"}},"metadata":{"application/vnd.jupyter.widget-view+json":{"colab":{"custom_widget_manager":{"url":"https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/2b70e893a8ba7c0f/manager.min.js"}}}}},{"output_type":"stream","name":"stderr","text":["<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n"]},{"output_type":"stream","name":"stdout","text":["\n","Epoch 001     \n","train_loss: 1.6081 eval_loss 1.5830     \n","train_acc 0.4334 eval_acc 0.4436     \n","train_rec 0.1435 eval_rec 0.1487     \n","train_pre nan eval_pre nan\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n"]},{"output_type":"stream","name":"stdout","text":["\n","Epoch 002     \n","train_loss: 1.5315 eval_loss 1.5575     \n","train_acc 0.4587 eval_acc 0.4427     \n","train_rec 0.1482 eval_rec 0.1513     \n","train_pre nan eval_pre nan\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-40-0d9afdce9fc0>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m history_DistilBERT_freezed = train(df_train, df_test, model_DistilBERT_freezed, DistilBert_tokenizer,\n\u001b[0m\u001b[1;32m      2\u001b[0m                                    epochs=10, batch_size=64, learning_rate=1e-3, L2_reg=1e-3, max_length=32, freeze_backbone=True)\n","\u001b[0;32m<ipython-input-14-8fd0bc6bc828>\u001b[0m in \u001b[0;36mtrain\u001b[0;34m(df_train, df_test, transformer_model, tokenizer, epochs, batch_size, learning_rate, L2_reg, max_length, freeze_backbone)\u001b[0m\n\u001b[1;32m     23\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     24\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mepoch\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mepochs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 25\u001b[0;31m             \u001b[0mtrain_loss\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrain_acc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrain_recall\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrain_precision\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfit_epoch\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrain_dataloader\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcriterion\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mopt\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfreeze_backbone\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     26\u001b[0m             \u001b[0;31m# print(\"loss\", train_loss)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     27\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-11-acb7f400d60e>\u001b[0m in \u001b[0;36mfit_epoch\u001b[0;34m(model, train_dataloader, criterion, optimizer, freeze_backbone)\u001b[0m\n\u001b[1;32m      7\u001b[0m     \u001b[0mbatch_counter\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 9\u001b[0;31m     \u001b[0;32mfor\u001b[0m \u001b[0mbatch\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mtrain_dataloader\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     10\u001b[0m         \u001b[0minput\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbatch\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'text'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msqueeze\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdevice\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m         \u001b[0mmask\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbatch\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'mask'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msqueeze\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdevice\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/utils/data/dataloader.py\u001b[0m in \u001b[0;36m__next__\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    629\u001b[0m                 \u001b[0;31m# TODO(https://github.com/pytorch/pytorch/issues/76750)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    630\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_reset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[call-arg]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 631\u001b[0;31m             \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_next_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    632\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_num_yielded\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    633\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_dataset_kind\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0m_DatasetKind\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mIterable\u001b[0m \u001b[0;32mand\u001b[0m\u001b[0;31m \u001b[0m\u001b[0;31m\\\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/utils/data/dataloader.py\u001b[0m in \u001b[0;36m_next_data\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    673\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_next_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    674\u001b[0m         \u001b[0mindex\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_next_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# may raise StopIteration\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 675\u001b[0;31m         \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_dataset_fetcher\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfetch\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# may raise StopIteration\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    676\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_pin_memory\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    677\u001b[0m             \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_utils\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpin_memory\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpin_memory\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_pin_memory_device\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/utils/data/_utils/fetch.py\u001b[0m in \u001b[0;36mfetch\u001b[0;34m(self, possibly_batched_index)\u001b[0m\n\u001b[1;32m     49\u001b[0m                 \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__getitems__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpossibly_batched_index\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     50\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 51\u001b[0;31m                 \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0midx\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0midx\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mpossibly_batched_index\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     52\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     53\u001b[0m             \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mpossibly_batched_index\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/utils/data/_utils/fetch.py\u001b[0m in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m     49\u001b[0m                 \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__getitems__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpossibly_batched_index\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     50\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 51\u001b[0;31m                 \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0midx\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0midx\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mpossibly_batched_index\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     52\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     53\u001b[0m             \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mpossibly_batched_index\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-6-a73033ec9669>\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, idx)\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__getitem__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0midx\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mList\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mint\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m         \u001b[0mencode\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtokenizer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mencode_plus\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0miloc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0midx\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'text'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_length\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmax_length\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpadding\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'max_length'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtruncation\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreturn_tensors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'pt'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m         \u001b[0mtokenized_sentence\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mencode\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'input_ids'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m         \u001b[0mattention_mask\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mencode\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'attention_mask'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/transformers/tokenization_utils_base.py\u001b[0m in \u001b[0;36mencode_plus\u001b[0;34m(self, text, text_pair, add_special_tokens, padding, truncation, max_length, stride, is_split_into_words, pad_to_multiple_of, return_tensors, return_token_type_ids, return_attention_mask, return_overflowing_tokens, return_special_tokens_mask, return_offsets_mapping, return_length, verbose, **kwargs)\u001b[0m\n\u001b[1;32m   3006\u001b[0m         )\n\u001b[1;32m   3007\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3008\u001b[0;31m         return self._encode_plus(\n\u001b[0m\u001b[1;32m   3009\u001b[0m             \u001b[0mtext\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtext\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3010\u001b[0m             \u001b[0mtext_pair\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtext_pair\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/transformers/tokenization_utils.py\u001b[0m in \u001b[0;36m_encode_plus\u001b[0;34m(self, text, text_pair, add_special_tokens, padding_strategy, truncation_strategy, max_length, stride, is_split_into_words, pad_to_multiple_of, return_tensors, return_token_type_ids, return_attention_mask, return_overflowing_tokens, return_special_tokens_mask, return_offsets_mapping, return_length, verbose, **kwargs)\u001b[0m\n\u001b[1;32m    717\u001b[0m             )\n\u001b[1;32m    718\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 719\u001b[0;31m         \u001b[0mfirst_ids\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mget_input_ids\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtext\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    720\u001b[0m         \u001b[0msecond_ids\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mget_input_ids\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtext_pair\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mtext_pair\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    721\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/transformers/tokenization_utils.py\u001b[0m in \u001b[0;36mget_input_ids\u001b[0;34m(text)\u001b[0m\n\u001b[1;32m    684\u001b[0m         \u001b[0;32mdef\u001b[0m \u001b[0mget_input_ids\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtext\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    685\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtext\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 686\u001b[0;31m                 \u001b[0mtokens\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtokenize\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtext\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    687\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconvert_tokens_to_ids\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtokens\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    688\u001b[0m             \u001b[0;32melif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtext\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mlist\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtuple\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtext\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m0\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtext\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/transformers/tokenization_utils.py\u001b[0m in \u001b[0;36mtokenize\u001b[0;34m(self, text, **kwargs)\u001b[0m\n\u001b[1;32m    615\u001b[0m                 \u001b[0mtokenized_text\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtoken\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    616\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 617\u001b[0;31m                 \u001b[0mtokenized_text\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mextend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_tokenize\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtoken\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    618\u001b[0m         \u001b[0;31m# [\"This\", \" is\", \" something\", \"<special_token_1>\", \"else\"]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    619\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mtokenized_text\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/transformers/models/distilbert/tokenization_distilbert.py\u001b[0m in \u001b[0;36m_tokenize\u001b[0;34m(self, text, split_special_tokens)\u001b[0m\n\u001b[1;32m    206\u001b[0m                     \u001b[0msplit_tokens\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtoken\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    207\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 208\u001b[0;31m                     \u001b[0msplit_tokens\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwordpiece_tokenizer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtokenize\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtoken\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    209\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    210\u001b[0m             \u001b[0msplit_tokens\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwordpiece_tokenizer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtokenize\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtext\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/transformers/models/distilbert/tokenization_distilbert.py\u001b[0m in \u001b[0;36mtokenize\u001b[0;34m(self, text)\u001b[0m\n\u001b[1;32m    534\u001b[0m                 \u001b[0mcur_substr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    535\u001b[0m                 \u001b[0;32mwhile\u001b[0m \u001b[0mstart\u001b[0m \u001b[0;34m<\u001b[0m \u001b[0mend\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 536\u001b[0;31m                     \u001b[0msubstr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"\"\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjoin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mchars\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mstart\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0mend\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    537\u001b[0m                     \u001b[0;32mif\u001b[0m \u001b[0mstart\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    538\u001b[0m                         \u001b[0msubstr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"##\"\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0msubstr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]},{"cell_type":"code","source":["probs, attention_weights, inputs, labels = predict(df_test, model_DistilBERT_freezed, DistilBert_tokenizer, batch_size=64, max_length=32)"],"metadata":{"id":"6DZNXr-h2aMw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(probs[0].shape)\n","print(attention_weights[0].shape)\n","print(inputs[0].shape)\n","print(labels[0].shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FiSmcaKX8qve","executionInfo":{"status":"ok","timestamp":1712168569733,"user_tz":-180,"elapsed":7,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"13a853b6-f76c-4c94-ebd4-944f89876013"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(64, 7)\n","torch.Size([64, 12, 32, 32])\n","torch.Size([64, 32])\n","torch.Size([64])\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"POTeM1srKKN_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print([np.argmax(p) for p in probs[0]])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Qvgp8iDCJ6Nu","executionInfo":{"status":"ok","timestamp":1712168624938,"user_tz":-180,"elapsed":9,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"cbc634b0-b038-4a50-bcf5-85a02fdd7e0d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[2, 2, 0, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 2, 2, 2, 2, 0, 2, 2, 2, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 0, 2, 0, 2, 2, 2, 0, 2, 0, 2, 2, 2, 2, 2, 2]\n"]}]},{"cell_type":"code","source":["print(labels[0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PT6F6LHHKAAP","executionInfo":{"status":"ok","timestamp":1712168583941,"user_tz":-180,"elapsed":11,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"85ed5611-cf8e-42c8-aa66-cb4281473396"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["tensor([5, 2, 0, 3, 6, 2, 3, 2, 2, 2, 2, 2, 2, 4, 3, 6, 0, 0, 0, 1, 2, 2, 2, 2,\n","        2, 0, 2, 5, 4, 0, 2, 2, 2, 2, 0, 5, 2, 5, 2, 2, 5, 2, 4, 2, 4, 0, 2, 1,\n","        2, 3, 2, 0, 2, 6, 1, 0, 2, 2, 2, 6, 0, 3, 2, 6])\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"4Vt7xiwBKAEd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["batch_i = 0\n","seq_i = 0\n","head_i = 10\n","attention_matrix = attention_weights[batch_i][seq_i][head_i].cpu().numpy()\n","input_seq = inputs[0][seq_i].cpu().numpy()"],"metadata":{"id":"vN3CKpner0XO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(list(map(DistilBert_tokenizer.decode, input_seq)))\n","input_seq_list_init = list(map(DistilBert_tokenizer.decode, input_seq))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":164},"id":"MH1mwjKDRC6W","executionInfo":{"status":"error","timestamp":1712221806267,"user_tz":-180,"elapsed":19,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"e017a5b7-8e15-436f-aed5-91967d231f4e"},"execution_count":1,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'DistilBert_tokenizer' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-1e9745a8998f>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mDistilBert_tokenizer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdecode\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput_seq\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0minput_seq_list_init\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mDistilBert_tokenizer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdecode\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput_seq\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'DistilBert_tokenizer' is not defined"]}]},{"cell_type":"code","source":["input_seq_list = [i.replace('#','') for i in input_seq_list_init]\n","print(input_seq_list)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"t0RkGJnFtLG3","executionInfo":{"status":"ok","timestamp":1712147495265,"user_tz":-180,"elapsed":7,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"e6bbe193-0dcf-445a-99a9-77b1434a3e8d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['[ C L S ]', 'д', '  о', '  к а', '  ж', '  и', '  т', '  е', ',', 'ч', '  т', '  о', '[ S E P ]', '[ P A D ]', '[ P A D ]', '[ P A D ]', '[ P A D ]', '[ P A D ]', '[ P A D ]', '[ P A D ]', '[ P A D ]', '[ P A D ]', '[ P A D ]', '[ P A D ]', '[ P A D ]', '[ P A D ]', '[ P A D ]', '[ P A D ]', '[ P A D ]', '[ P A D ]', '[ P A D ]', '[ P A D ]']\n"]}]},{"cell_type":"code","source":["def tokens_to_chars(tokens, tokenizer):\n","    chars = list(map(tokenizer.decode, tokens))\n","    chars_no_hash = [i.replace('#','') for i in chars]\n","    return chars_no_hash\n","\n","def draw_attention_map(attention_matrix, tokens, tokenizer):\n","    chars = tokens_to_chars(tokens, tokenizer)\n","    # plt.figure(figsize=(15, 10))\n","    plt.figure(figsize=(9, 6))\n","    # sns.heatmap(attention_matrix, cmap=\"YlGnBu\", xticklabels=chars, yticklabels=chars, annot=True, fmt=\".2f\")\n","    sns.heatmap(attention_matrix, cmap=\"YlGnBu\", xticklabels=chars, yticklabels=chars,)\n","    plt.xlabel(\"To\")\n","    plt.ylabel(\"From\")\n","    plt.title(\"Attention Map\")\n","    plt.show()"],"metadata":{"id":"RsDYn4Z7obX4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["draw_attention_map(attention_matrix, input_seq, DistilBert_tokenizer)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":635},"id":"qseBtevrrwyP","executionInfo":{"status":"ok","timestamp":1712147681345,"user_tz":-180,"elapsed":1714,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"16b142b4-5f2d-40f6-e8a7-690d24c2c465"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 900x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["loss, acc, eval_loss, eval_acc = zip(*history_DistilBERT_freezed)"],"metadata":{"id":"WUDLI-eh4xDT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(8, 6))\n","plt.plot(loss, label=\"train_loss\")\n","plt.plot(eval_loss, label=\"eval_loss\")\n","plt.legend(loc='best')\n","plt.xlabel(\"epochs\")\n","plt.ylabel(\"loss\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":554},"id":"NmOi4b8U48aq","executionInfo":{"status":"ok","timestamp":1712147538632,"user_tz":-180,"elapsed":18,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"0bf78864-d989-47bc-93fa-39e5ae1f2086"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["eval_acc_corr = []\n","for i in range(0,len(eval_acc)):\n","    eval_acc_corr.append(eval_acc[i].item())"],"metadata":{"id":"HE8VexRP4_Wu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(8, 6))\n","plt.plot(acc, label=\"train_acc\")\n","plt.plot(eval_acc_corr, label=\"eval_acc\")\n","plt.legend(loc='best')\n","plt.xlabel(\"epochs\")\n","plt.ylabel(\"acc\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":554},"id":"6inNoxUS5D7C","executionInfo":{"status":"ok","timestamp":1712147602333,"user_tz":-180,"elapsed":1377,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"e31702af-652a-4f71-b983-75e4ebe0e00c"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# ---------------------------------------- DistilBERT ----------------------------------------"],"metadata":{"id":"Zl9J56CQzjXL"}},{"cell_type":"code","source":["model_DistilBERT = TransformerClassificationModel(len(label2ind), DistilBERT_backbone).to(device)"],"metadata":{"id":"PMWF2R8czeJq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["history_DistilBERT = train(df_train, df_test, model_DistilBERT, DistilBert_tokenizer,\n","                           epochs=10, batch_size=64, max_length=32, learning_rate=1e-3, L2_reg=1e-3, freeze_backbone=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":594,"referenced_widgets":["422dd35edcf5459a8cc60ea52f85da70","e5e259e8570b47a3ade0a4700df3c8b6","f1ff779801554e25827499a2c6f033db","3a9e88e2ddca41c7844891d3653100a8","76b4f07a316c47cfbf3b796e76c6267c","990a0ebfe8d440efbc3e6d4534a6ca6b","62754ab69a924f0f8d7346dfb82376b7","e0223ef03d6a49f7bbf0eea054168e39","7bd668c5a6db4d828f9aba8b9a0a9079","9456d655d7c841f0b013ec1bd459b1d3","239e85c279844ed19069ec5b110d07d8"]},"id":"2hABas1WbGGF","executionInfo":{"status":"ok","timestamp":1712147983510,"user_tz":-180,"elapsed":168616,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"95c9b6cc-303e-4596-e276-12e31a8e8610"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["epoch:   0%|          | 0/10 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"422dd35edcf5459a8cc60ea52f85da70"}},"metadata":{"application/vnd.jupyter.widget-view+json":{"colab":{"custom_widget_manager":{"url":"https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/2b70e893a8ba7c0f/manager.min.js"}}}}},{"output_type":"stream","name":"stdout","text":["loss 1.5050065289633485\n","\n","Epoch 001 train_loss: 1.5050     eval_loss 1.5264 train_acc 0.4659 eval_acc 0.4483\n","loss 1.4793151091941446\n","\n","Epoch 002 train_loss: 1.4793     eval_loss 1.4854 train_acc 0.4682 eval_acc 0.4654\n","loss 1.4587317663326598\n","\n","Epoch 003 train_loss: 1.4587     eval_loss 1.5016 train_acc 0.4716 eval_acc 0.4559\n","loss 1.4455812509843329\n","\n","Epoch 004 train_loss: 1.4456     eval_loss 1.4694 train_acc 0.4770 eval_acc 0.4701\n","loss 1.430015987895461\n","\n","Epoch 005 train_loss: 1.4300     eval_loss 1.4460 train_acc 0.4775 eval_acc 0.4720\n","loss 1.420480745841452\n","\n","Epoch 006 train_loss: 1.4205     eval_loss 1.4503 train_acc 0.4798 eval_acc 0.4720\n","loss 1.407546243208627\n","\n","Epoch 007 train_loss: 1.4075     eval_loss 1.4423 train_acc 0.4889 eval_acc 0.4853\n","loss 1.3990014378297606\n","\n","Epoch 008 train_loss: 1.3990     eval_loss 1.4246 train_acc 0.4879 eval_acc 0.4777\n","loss 1.3919264151621566\n","\n","Epoch 009 train_loss: 1.3919     eval_loss 1.4212 train_acc 0.4912 eval_acc 0.4891\n","loss 1.3848231703028853\n","\n","Epoch 010 train_loss: 1.3848     eval_loss 1.4190 train_acc 0.4934 eval_acc 0.4645\n"]}]},{"cell_type":"code","source":["probs, attention_weights, inputs, labels = predict(df_test, model_DistilBERT, DistilBert_tokenizer, batch_size=64, max_length=32)\n","\n","batch_i = 0\n","seq_i = 0\n","head_i = 10\n","attention_matrix = attention_weights[batch_i][seq_i][head_i].cpu().numpy()\n","input_seq = inputs[0][seq_i].cpu().numpy()"],"metadata":{"id":"sxmRdUCPENb4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["draw_attention_map(attention_matrix, input_seq, DistilBert_tokenizer)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":635},"id":"e9cFETG29SS0","executionInfo":{"status":"ok","timestamp":1712148112984,"user_tz":-180,"elapsed":658,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"17445dad-5fe8-4522-b542-22fd3c98fec9"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 900x600 with 2 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAxcAAAJqCAYAAABZ672XAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAACnKUlEQVR4nOz9e1jU953//98HwuAJiHQxalARi4da00KsFhS0rMaY2EXQWNNI0KQRlmDNaQ0etq27TUNtmt2suWjSKmljUhIYsdCkm9VAUAJVGrUajTX9pKhBE4KMEFBSYJjfH/6YbygHB+c9zmR83K5rrst5v1/v5zzfI+I853Uy2e12OyIiIiIiIi7y83QCIiIiIiLiG1RciIiIiIiIIVRciIiIiIiIIVRciIiIiIiIIVRciIiIiIiIIVRciIiIiIiIIVRciIiIiIiIIVRciIiIiIiIIVRciIiIiIiIIVRciIjIFdXW1jJp0iSys7M9nYqIiHgxFRciIi74xS9+waRJk5g0aRJ/+9vf+myXmJhIYmJin+cnTZpEamqqO1J0mjfkMBBdBc+kSZOIjo6mpaWl13Z2u5158+Y52h44cOAaZyoicv1QcSEicpXsdjuFhYWYTCYACgsLPZyR+9x000384Q9/4JFHHvF0Kj3ccMMNXLp0iddff73X83/84x/58MMPueGGG65xZiIi1x8VFyIiV+ntt9/m7NmzJCcnExYWxq5du2hra/N0Wm4REBDAhAkTGDFihKdT6WHq1KmEhYVRUFDQ6/mCggLMZjNxcXHXODMRkeuPigsRkavU1VNx11138e1vf5sLFy7w5ptvdmtz4MABJk2axNmzZzl79qxjaE7X/IWioiImTZoEQHV1dbfzW7du7RbryJEjfP/732fWrFl89atfZc6cOfzgBz+grq6uR26pqalMmjSJjo4OnnvuOW677TbHNT/72c+6FUHO5NDfnItPPvmEzZs3k5iYyFe/+lW++c1vkpWVxbFjx3q07XqtoqIi9u/fT2pqKtHR0cTExLB69Wo++OCDgfwVAODv709KSgrHjh3jL3/5S7dzVquVN998k9tuu42QkJBer9+/fz///u//zh133EFMTAy33HILixYt4tlnn+Xvf/97j/Zbt251DK/atWsXixcv5pZbbiE2Npb169dTX18/4HsQEfEV6iMWEbkK58+fp6ysjIiI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Tp06xY033thrYQEQFhbm9hxERERExDUm756m7FV87p164403AFi+fLmHM4GxY8fS2NjI7t27PZ2KiIiIiIjb+VzPxcmTJwH4yle+4uFMYM2aNTz00EOsWbOGiIgIYmJimDZtGjNnzmTChAmeTk9EREREnKA5F87zuXeqpaUFgGHDhnk4E7j99tv57W9/yx133EFjYyNFRUVs3ryZO+64g3vuuYcPP/zQ0ymKiIiIiBjG53ouuoqKlpYWbrzxRs8mA8TExBATEwPAhx9+yJ/+9CcKCgp45513yMzMZOfOnZjNZg9nKSIiIiJ9Uc+F83zunZo0aRIA7733nocz6WnMmDGkpKTw29/+lujoaN5//32OHj3q6bRERERERAzhc8XF7bffDsCrr77q4Uz65ufnx9e//nUAPvnkE88mIyIiIiL9MplMbnv4Gp8rLubMmcOsWbN44403eOGFF3pt09TUxI9//GO357J3717s9p67P7e2tvL2228DaGK3iIiIiNfzc+PDt/jcnAuA//qv/yIrK4ucnBxKSkr453/+Z8cO3cePH2f37t0MGjTI6b0uiouLqa6u7nF89OjRLF68uM/rHn30UYKCgpg7dy5f/vKXMZvNfPzxx7z22mucOnWKlJQUxzAuEREREZEvOp8sLkJCQvj1r3/NH/7wB0pKSvjtb39LU1MTgYGBREZGsmrVKr7zne84Ha+goKDX4zExMf0WFz/5yU/Yt28ff/rTn3j99de5ePEiw4YNY/LkyaSnp/d7rYiIiIh4B03odt4Xorhobm7GarUydOhQAgMDnbrG39+fb3/723z729++6tdds2YNa9asuerrb7vtNm677barvr6L1WoFoLOz0+VYIiIiIiLu8oUoLh588EEAfvSjH3H33Xd7OJtrq6Ojg9jYWMfzMWPGXHWsQTd8yYiUMOH65KMb/AYbkIkx7PScF3M1/AgwJI6rBvmHGhInfOhwQ+IYwYifuVFDJhqQCWQu+C+XY3z3/z1iQCYiInKtqOfCeV5dXMyePbvbpOzrcfKzv79/t/cgODjYg9mIiIiIiPTNq4uLESNGMGLECE+n4VEmk4m4uDhPpyEiIiJy3TL54KpO7qJ3SkREREREDOHVPRfXowMHDnDvvff2ei4rK8ulCeYiIiIiMnCac+E8FRde6jvf+Q633norABcuXODJJ5/0cEYiIiIi1ycVF87TO+Vl2tvbgct7aCQlJZGUlMS8efM8nJWIiIiIyJWp58LLfPbZZwCYzWYPZyIiIiIioJ6LgdA75WXOnz8PQFBQkIczEREREREZGPVceJnTp08DcPPNN3s4ExEREREBYzZzvV6o58LL/OlPfyIkJISIiAhPpyIiIiIiMiDqufAif/nLX3j33XdJSUnBz091n4iIiIg30JwL56m48BKvvvoqzz//PHB5Z/Li4mLHuQsXLgBw8uRJKisrmTVrlkdyFBERERHpj4oLL/GDH/zA8efnnnuu1zZ79uyhqalJxYWIiIjINaSeC+epuPAiTz75JCkpKX2e37p1K9XV1dcwIxERERFRceE8FRfXkU57uyFx/E2u78Fhx25AJsas3qAVIPrS6ekEPsff0wk4mG8Y6ukUREREvJaKCy/x7W9/m7Fjx/bbZtKkSdxwg/7KRERERK4t9Vw4S59UvcRTTz3l+PMHH3zAs88+y4EDB/j000+56aabuO2223jwwQe57bbbPJiliIiIiEjfVFx4mRMnTnDPPfdgs9n47ne/S3h4OIcOHSIvL48//vGP5OfnM3jwYE+nKSIiInLd0JwL56m48DI//vGPuXTpEi+//DK33norAPfccw/jx49n69atvPDCC2RmZno4SxERERGRnlSGeRGr1co777zDrFmzHIVFl/vvv58hQ4awe/duD2UnIiIicn0ymfzc9vA1vndHX2AffvghABMnTuxxbvDgwYwZM4YzZ85c67RERERERJyiYVEiIiIiIv0w6ft4p+md8iJjxowB4K9//WuPc5999hkffvjhFZerFRERERHxFBUXXiQ0NJTp06fz9ttvc/To0W7n8vLyuHTpkpaiFREREbnGNOfCeRoW5WU2bdrEPffcQ1paGsuXL2fMmDEcPHiQ1157jcmTJ7Nq1SpPpygiIiJyXTGZTJ5O4QtDxYWXmTJlCoWFhWzdupVdu3bR0tLCiBEjWLVqFQ8++KD2uBARERERr6XiwgtNmDCB//7v//Z0GiIiIiKCNtEbCL1TIiIiIiJiCPVcXEf8TAGeTsHBhPeMXbRjNySON92TMfTdQ28+a2vydAoiInKNaSla5+mdEhERERERQ6jnQkRERESkH5pz4Ty9UwbKzs5m0qRJ3Y61tLSwbNkyoqOjeeedd64Y4+jRo6xfv54FCxbw9a9/na9//essWbKEnTt3uittERERERFDqOfCjVpaWvje977HX//6V371q18xffr0K16zZ88e/vrXv3L77bczevRompub+d///V82bNiA1WrlgQceuAaZi4iIiEgX9Vw4T8WFm1y8eJEHHniAkydP8stf/tKpwgLgX//1X3n00Ue7HbvvvvtITU3l+eefZ+XKlQQEeM/EbBERERFfpwndztM75QaXLl3igQce4N133+WXv/wl3/jGN5y+dsiQIY4/f/bZZ1y4cIHGxkbi4+Npbm6mpqbGHSmLiIiIiLhMPRdusHr1ag4ePAhc7sEYCKvVyv/8z//w5ptvUl9f3+N8U5OWwRQRERG5pjQsymkqLtygq8fiqaeeYsOGDfz+97/nS1/60hWvs9vtfO973+P9999nxYoVTJs2jeDgYPz9/dm7dy+//vWv6ezsvAZ3ICIiIiIycCou3OAXv/gFcXFxjBo1iiVLlrBx40aee+65K1538uRJjh8/TmZmJmvXru12rrKy0l3pioiIiEg/NKHbeXqn3CAuLg6AiRMn8uijj/LWW2+Rn59/xev8/f2Byz0Yn1dXV4fFYjE+URERERERA6nnws3S0tLYt28fP/3pT5k5cyaRkZF9to2MjGTixIls27aNS5cuERUVRW1tLa+88gpjxoyhsbHx2iUuIiIiIgCYTCZPp/CFoZ4LNzOZTDz55JMEBgby2GOP0d7e3mdbf39/nn/+eW677TZee+01/vM//5Py8nL+7d/+je9+97vXMGsRERERkYEz2f9xDI74LDsnDYljwreqdzvG/BPQ++I+Rry3Rt1PSOTPXI7x6d/WGZCJiIivm+jpBByipm91W+y/vrPGbbE9QcOiriO+9uHXKHpfeudNH+i9id1u83QKIiJyjWlCt/P0TomIiIiIiCHUcyEiIiIi0h9N6Haaei486Ic//CFTpkzhf//3f7sdT01NJTExsduxd955h6997WtkZGTQ0dFxLdMUEREREXGKei486Ic//CEtLS3827/9G8OGDSM+Pr7Xdu+99x4ZGRnccsstPPPMM9xwg/7aRERERK4ZfR3vNL1VHuTn58dPf/pTZs+ezZo1azh06FCPNn/729+4//77GT9+PM899xyBgYEeyFRERERE5MpUXHjYDTfcwDPPPMNXvvIV0tPT+ctf/uI4d+7cOe677z5CQkL41a9+xdChQz2YqYiIiMh1ymRy38PHaHyNF+js7KShoYFPP/2U++67j2HDhnHp0iVWrVrFRx99xI033qh5FiIiIiLi9dRz4QWefvppPvzwQ55//nmGDx/O6dOnuXDhApcuXeKFF16gra2NH/7wh55OU0REROT6pJ4Lp6m48LB33nmHHTt2sGrVKubOnUteXh5hYWEMHjyYvLw84uLieOyxx3jzzTcpKSnxdLoiIiIi1x8/Nz58jA/e0hdHa2sr69evZ8KECaxduxaAm266ifHjxxMaGkpUVBQA3/3ud4mNjeWJJ56gvr7ekymLiIiIiPRJxYUHPfXUU5w9e5acnBzMZnOf7UwmE0888QTt7e384Ac/uIYZioiIiIjdZHLbw9eouPCQ6upqXn75ZR544AGmTZt2xfY333wzjz/+OGVlZfzud79zf4IiIiIiIgNkstvtdk8nIdfK+55OQK4zdoz59WLC9W92jMoleHyOyzGaa9YbkImIiK+b6OkEHKISnndb7L/uS3dbbE9Qz4WIiIiIiBhC+1xcR7zpW2S5Pvjiz4rJB8fHiojIFfjpd7+z1HMhIiIiIiKGUM+FiIiIiEh/1GvtNPVceJns7GwmTZrU4/jLL7/MpEmTej0nIiIiIm5kcuPDx6i4+AI4f/48//3f/+3pNERERERE+qXi4gvgpz/9KTabjVmzZnk6FREREZHrj5/JfQ8fo+LCy1VXV1NSUsL3v/99RowY4el0RERERET6pOLCi7W3t7N582YmTZpEamqqp9MRERERuT6ZTO57+BitFuXFXnjhBT744AN++9vf4u/v7+l0RERERET6peLCS507d47c3FxSUlKIiYnxdDoiIiIi1y/f62BwGxUXXurHP/4xgYGBPPbYY55ORURERES82O7du9m2bRvvv/8+AQEB3HrrrTzyyCNMnDjRqev/8pe/8Pzzz3PkyBHq6+v50pe+xNSpU7n//vsH/CW35lx4qdLSUh599FFCQ0M9nYqIiIjI9c2LV4sqLCxkzZo1tLa28thjj5GRkcHJkydZvnw5J0+evOL1R48e5a677uKdd94hOTmZH/zgByQnJ/PnP/+Ze+65h7fffntA+ajnwkt9/etf56677vJ0GiIiIiLipcOimpqayMnJYeTIkeTn5zNs2DAAFi5cyJ133skTTzzBiy++2G+MF198kba2NrZv396tp2PevHmkpKRQUFDA7Nmznc5JPRdeJicnh5MnT/Lqq69i+ocVBLrOiYiIiIiUlpbS0tLCXXfd5SgsAEaPHs2CBQs4cOAAH330Ub8xWlpaAHpseXDTTTcBMHjw4AHlpJ4LEemVHbvLMUze+lWPiIjIANjduGTsP//zP/d7vrS0tM9zR44cASA6OrrHuejoaHbt2sW7777LqFGj+owxe/Zs3nrrLR599FG+//3vM3LkSM6dO8czzzxDSEgI9913n5N3cpmKCxERERGRL6C6ujoARo4c2eNc17GPP/643xh33303dXV1vPTSSyxbtsxxfOLEiRQUFBARETGgnFRciIiIiIj0x4CJ133pr2fiSlpbWwEwm809znUd++yzz/qN4efnx0033cTkyZOZN28eERERnDp1iu3bt/O9732P3/zmN9x8881O56TiwsukpqZSXV3db5ubb76ZsrKya5SRiIiIiHijrvkQbW1tPc51HRs0aFC/MX7+85/zwgsvsGvXrm4TumfPnk1KSgpbtmzhmWeecTonFRdeJiMjg6VLlzqeP/fcc1y4cIH169c7jg0dOtQTqYmIiIhcn7x0CmHXpOuPP/6YCRMmdDvXNRyqtyFTXdrb2/n1r39NZGRkjz0xJk2aRGRkJAcOHBhQTiouvMysWbO6PbdYLPz9738nKSnJQxmJiIiIiDe65ZZbeOWVVzh8+HCPz5B//vOfAZg2bVqf11+4cIH29nZsNluv5zs6Ovo81xctRSsiIiIi0h+TyX0PF8ybN4+hQ4dSWFjoWFIW4Ny5c7zxxhvMmDHDsVJUa2srH3zwAZ988omj3T/90z8xfPhwampqHMVIl8OHD3Pq1CluueWWAeWk4kJEREREpD9eukN3SEgI69at4+OPP+buu+/mpZdeIi8vjxUrVgCwceNGR9ujR49yxx138PTTT/9/t+Xnx5o1a+js7GTVqlX89Kc/5dVXX+WnP/0p9913HwEBAaxdu3ZAOWlYlIiIiIjIF9Ty5cu58cYb2b59Oz/72c8ICAhg+vTpPPTQQ0yePPmK199zzz3cdNNN7NixA4vFwsWLF7nxxhuJj48nMzPTqRifp+JCRERERKQ/Xjqhu8vtt9/O7bff3m+bmTNncvLkyV7PzZs3j3nz5hmSi4ZFiYiIiIiIIdRzISIiIiLSHxcnXl9P1HMhIiIiIiKGUM+Fl9uxY4enUxARERG5vqnnwmnquRAREREREUOo5+I6YrcPbIfFvphM+rGR65d+/kVErkP6Ot5p+l9SRERERKQ/GhblNNVhIiIiIiJiCPVceKHz58/zi1/8grfeeotPPvmE4OBg4uLieOihhwgPD/d0eiIiIiLXF3VcOE3FhZf56KOPWL58OZcuXWLp0qVERERQV1dHfn4+lZWV7Ny5k9GjR3s6TRERERGRHlRceJkf//jHtLa2UlRUxJgxYxzHU1JS+Pa3v83WrVt58sknPZihiIiIyPXF7qeuC2epuPAizc3NlJWVceeddzJ06FCsVqvj3JAhQ/j6179ORUWFBzMUEREREembigsvUlNTQ2dnJ7///e/5/e9/32sbPz/NwRcRERG5prRalNNUXHgRu90OwMKFC1m2bJmHsxERERERGRgVF15k7Nix+Pn58dlnnxEXF+fpdEREREQEtFrUAGiMjRcZPnw4c+bMYe/evezfv7/XNufPn7/GWYmIiIiIOEc9F15m8+bN3H333dx3330sWrSIadOm4efnx9mzZ9m3bx9f/epXycnJ8XSaIiIiItcPrRblNBUXXuamm25i165dbNu2jTfffJP//d//JSAggJtuuonp06ezdOlST6coIiIicn3RhG6nqbjwQiEhITz66KM8+uijnk5FRERERMRpKi7EI+zYDYlj0gwrt+nobHU5xg1+gw3IxJi/Z7vdZkAmMHTwTYbEERGRLxB93HCaJnSLiIiIiIgh1HMhIiIiItIfTeh2mnouRERERETEEOq5EBERERHpj3ounKaeCxERERERMYR6LkRERERE+mFXx4XTVFyIiIiIiPRHw6KcpmFRIiIiIiJiCPVciIiIiIj0x6SeC2ep50JERERERAyh4uILJDExkUmTJnk6DREREZHri5/JfQ8fo+LiC+TixYuMGDHC02mIiIiIiPRKcy6+IE6cOEFjYyM/+clPPJ2KiIiIyPVFX8c7TW/VF0RFRQWTJ08mOTnZ06mIiIiIiPRKPRdfEKtXr2b16tUuxTAZtNKBHbshccS7+ZsCXI5ht9sMyAQw+RsTR0RE5GpotSinqbgQEREREemPD068dhcNi/JC2dnZva4KVVRUxKRJkzhw4IAHshIRERER6Z96LkRERERE+mHXsCinqefCC3XNjejs7PRwJiIiIiIizlNx4YXCwsIAOHfunIczERERERH83PjwMT54S198M2fOBODJJ5+kpqYGq9WK1Wrl0qVLHs5MRERERKRvmnPhhWbNmkVGRga//OUvefPNNz2djoiIiMj1TatFOU3FhZd6+OGHSUtL44MPPqC9vR2At99+m+3bt3s4MxERERGR3qm48GKhoaGEhoY6nn/88ccezEZERETkOqXVopym4kJEREREpD8aFuU0TegWERERERFDqOfiCyQlJYWUlBRPpyEiIiJyfVHHhdPUcyEiIiIiIoZQz4V4hElfAXg9k8m3fj2YDJqM99nfLxgSR0REvjjsmnPhNPVciIiIiIiIIXzrq0kREREREaOp58JpKi68TGpqKtXV1f22ufnmmykrK7tGGYmIiIiIOEfFhZfJyMhg6dKljufPPfccFy5cYP369Y5jQ4cO9URqIiIiItcnbaLnNBUXXmbWrFndnlssFv7+97+TlJTkoYxERERErnOapew0vVUiIiIiImII9VyIiIiIiPRHw6Kcpp4LERERERExhHouRERERET6o6VonaaeCxERERERMYR6LkRERERE+qOeC6ep50JERERERAyhngsvt2PHDk+nICIiInJds2u1KKepuLiOdNrbDYnjZwo0JI63sGM3JI4J7/jFY9T92O0dhsQxgsnkPb+qhg0Z6ekURETkWtNYH6fprRIREREREUN4z9eBIiIiIiLeSMOinKbiwgt98MEHPPvssxw4cIBPP/2Um266idtuu40HH3yQYcOGeTo9EREREZFeqbjwMidOnOCee+7BZrPx3e9+l/DwcA4dOkReXh5//OMfyc/PZ/DgwZ5OU0REROT6oaVonabiwsv8+Mc/5tKlS7z88svceuutANxzzz2MHz+erVu38sILL5CZmenhLEVEREREetKEbi9itVp55513mDVrlqOw6HL//fczZMgQdu/e7aHsRERERK5Tfib3PXyMigsv8uGHHwIwceLEHucGDx7MmDFjOHPmzLVOS0RERETEKRoWJSIiIiLSH9/rYHAbFRdeZMyYMQD89a9/7XHus88+48MPP2TcuHHXOi0RERGR65rdB4cvuYuGRXmR0NBQpk+fzttvv83Ro0e7ncvLy+PSpUvcdtttHspORERERKR/6rnwMps2beKee+4hLS2N5cuXM2bMGA4ePMhrr73G5MmTWbVqladTFBEREbm+aBM9p6m48DJTpkyhsLCQrVu3smvXLlpa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\n"},"metadata":{}}]},{"cell_type":"code","source":["loss, acc, eval_loss, eval_acc = zip(*history_DistilBERT)"],"metadata":{"id":"j8KeVBKYb2l9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(8, 6))\n","plt.plot(loss, label=\"train_loss\")\n","plt.plot(eval_loss, label=\"eval_loss\")\n","plt.legend(loc='best')\n","plt.xlabel(\"epochs\")\n","plt.ylabel(\"loss\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":554},"executionInfo":{"status":"ok","timestamp":1712148121797,"user_tz":-180,"elapsed":459,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"8ac6fa9b-753c-4736-8087-40b99557b287","id":"Wb5Pt-Wgb2l-"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["eval_acc_corr = []\n","for i in range(0,len(eval_acc)):\n","    eval_acc_corr.append(eval_acc[i].item())"],"metadata":{"id":"m_o1Q9vLb2l_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(8, 6))\n","plt.plot(acc, label=\"train_acc\")\n","plt.plot(eval_acc_corr, label=\"eval_acc\")\n","plt.legend(loc='best')\n","plt.xlabel(\"epochs\")\n","plt.ylabel(\"acc\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":554},"executionInfo":{"status":"ok","timestamp":1712148126245,"user_tz":-180,"elapsed":1311,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"c17ea05c-36e0-43f8-d396-17e8cc3b9978","id":"82qSu8mmb2mA"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### Задание 4 (1 балл)\n","\n","Проверьте вашу функцию из предыдущего пункта, дообучив двумя способами\n","*cointegrated/rubert-tiny2* из huggingface."],"metadata":{"id":"eUqhI4mV_RTI"}},{"cell_type":"code","source":["from transformers import AutoTokenizer, AutoModel"],"metadata":{"id":"_oTWd26ZAp8w"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["rubert_tokenizer = AutoTokenizer.from_pretrained(\"cointegrated/rubert-tiny\")\n","rubert_tiny_backbone = AutoModel.from_pretrained(\"cointegrated/rubert-tiny\", output_attentions=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":209,"referenced_widgets":["46ac339ffa8446d3912425f5ca0ff0ef","7813c5b1cc3240f9a3c60b0d9b6769eb","8e8cdd8da2d5453d881343a23ce46007","5ca9b32d412c483e838f8cfa580bf481","42b88f0587634c0ab64406e1ee540ee6","55a3c5015e3d4ffe99181558e9d36e5e","0e8b5f758ee54000aea069d3b13fb2bf","ea338ab3dcc24b0aa9c92aab7d4ae30f","968b62a2f82b40d0aefca09363e51426","b516838142b44ae4a98208f51ffc6946","8ae360ac892a4151a2bfaf0e7ef2ea33","23e99d47305b4eff8cd25cb9ed866ec2","f2b76f0b17224373a2e961a9e9b30be0","55b548cb6a8845c6bf49f4e17dbef249","1968b6d16d534830854ef44909ea0e83","4c2a553c2395478ca73649299ffcfe01","9d3635e2c58348b3b226306041c6c490","e20bcbb2b2a8487791a62d3207c9d720","6cf3e143f77541a79ddbdb9917129af4","ce05e7b6a22246a1997427d05ae7cb19","4d94ed7bc1554192b191777c968709a6","a496705132b0428d9910704b4e2e1b9d","8017e8ee4ae5432aa73095b31803ee0b","b019066ad3794980971908f8226d8d3a","302b58ea049e4e8ea6560a1ef5f22d06","189f601913ba424eb8b445ec74122e47","f2b8da9b941c4e45bdda003285119e2f","8f0a42bfc66b47d3bf2a12f06832fce4","4865e91f78314fc7840cf05143d82689","935b477213bd4fb3b660442428e8e61f","3349e86c5f6d4e1b821595cccfd23f8e","cb74a99530b046979579a3535d34b1b1","b910f62120f34cfbb3cd5b6d3d57d31a","85afe327b836466f9b304ad5478b47a9","f975ae5234be4077b77dc16aead9b3bd","325ca87a15724a50ad72e09fdbaa80fb","3dac40e5c06b40aba6f357757a529276","5f6c0f9c4b74466b831f3377522269fa","bbe5d3445db748bc86ea2b216b7c3d47","be5dcd7d45cd47ae82fa46417c0ce3c4","f6c91cf3a3804ad49b3f357217c1be7c","9203197884b2453fa5dcdc1e13199142","fbdcc4f29127413a90b32092c5bc41d1","802aa70deb4e4df588d22d15e6f543f4","2fdcf4f79fee493b8a5c417db87f258a","fc880ae987234984807270e46461e32d","3478260bce1a4097bb4d417123fee2b9","62b8e7c5d0574007998e46293a80df0a","308c9d276c144bf9b522517fc88e2d00","0123229384eb496da090215aca2d529b","c3b09f29fff04012bfff84085a9e1c64","101059eceae54b43a918e4d6c80b3128","a90dfd4603d84a41846014ae6b4785d2","45793585848b4ae08acb9b2c341eb06b","1f2fe85c5dca409f8b6a214b87ac53ff","a254176233f74b5b8fb29085b0035f5c","5b53333d8f7546d78eaf77e5b64cf11e","cdac1b0593484cd4b5d836667a1d0333","25b6f36a11bc4479aba9925874020333","09c1ec674da14079ae915f8431e399a9","c8fc8ea64da045d981c377d6e3af5d00","a6bf6f6a9f004992866727eaefc6651e","36f73bd2cac741ae87e4db1741ef07c3","34bfd2af7ae44a56a99603963fcf3940","b74d90d87ae345d0b34eb08afa3761c2","23c0ecf93046453289ea45b8e3b21158"]},"id":"q-goXnj0Ap_Z","executionInfo":{"status":"ok","timestamp":1712188855640,"user_tz":-180,"elapsed":26,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"cad741b3-3705-4444-f339-44276bff8a6c"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["tokenizer_config.json:   0%|          | 0.00/341 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"46ac339ffa8446d3912425f5ca0ff0ef"}},"metadata":{"application/vnd.jupyter.widget-view+json":{"colab":{"custom_widget_manager":{"url":"https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/2b70e893a8ba7c0f/manager.min.js"}}}}},{"output_type":"display_data","data":{"text/plain":["config.json:   0%|          | 0.00/632 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"23e99d47305b4eff8cd25cb9ed866ec2"}},"metadata":{"application/vnd.jupyter.widget-view+json":{"colab":{"custom_widget_manager":{"url":"https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/2b70e893a8ba7c0f/manager.min.js"}}}}},{"output_type":"display_data","data":{"text/plain":["vocab.txt:   0%|          | 0.00/241k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"8017e8ee4ae5432aa73095b31803ee0b"}},"metadata":{"application/vnd.jupyter.widget-view+json":{"colab":{"custom_widget_manager":{"url":"https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/2b70e893a8ba7c0f/manager.min.js"}}}}},{"output_type":"display_data","data":{"text/plain":["tokenizer.json:   0%|          | 0.00/468k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"85afe327b836466f9b304ad5478b47a9"}},"metadata":{"application/vnd.jupyter.widget-view+json":{"colab":{"custom_widget_manager":{"url":"https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/2b70e893a8ba7c0f/manager.min.js"}}}}},{"output_type":"display_data","data":{"text/plain":["special_tokens_map.json:   0%|          | 0.00/112 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"2fdcf4f79fee493b8a5c417db87f258a"}},"metadata":{"application/vnd.jupyter.widget-view+json":{"colab":{"custom_widget_manager":{"url":"https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/2b70e893a8ba7c0f/manager.min.js"}}}}},{"output_type":"display_data","data":{"text/plain":["model.safetensors:   0%|          | 0.00/47.7M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"a254176233f74b5b8fb29085b0035f5c"}},"metadata":{"application/vnd.jupyter.widget-view+json":{"colab":{"custom_widget_manager":{"url":"https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/2b70e893a8ba7c0f/manager.min.js"}}}}}]},{"cell_type":"code","source":["model_rubert_tiny_freezed = TransformerClassificationModel(len(label2ind), rubert_tiny_backbone).to(device)"],"metadata":{"id":"96i0nkifAqBp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["history_rubert_tiny_freezed = train(df_train, df_test, model_rubert_tiny_freezed, rubert_tokenizer,\n","                                    epochs=10, batch_size=64, max_length=32, learning_rate=1e-3, L2_reg=1e-3, freeze_backbone=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"referenced_widgets":["bb0d308eac2540f4b2b5f227ef4cd6ab","390c987dd9754547a61b992b0e850c62","61d8bb24fcd844cd827b776ad969049e","5e9690343b7342088eb80a020ef2dc31","90cec0ac464d4d698aadfaf56874e901","4fa3ade98d964495b702f47310377f53","249d24635d664ed99fe612b6c07a2bd4","33adf18a90e54de09d074c049619098b","5d6f0256bd3140e68f08a1d236618b24","6cd00452043743ccbaca4914dcfbecab","c13baf7af19d40ecae2a31b556148e13"]},"id":"ajCD-_9tFBNd","executionInfo":{"status":"ok","timestamp":1712188906840,"user_tz":-180,"elapsed":47485,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"4ab06bca-e6df-4aac-ace6-9fb7ec06f1e4"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["epoch:   0%|          | 0/10 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"bb0d308eac2540f4b2b5f227ef4cd6ab"}},"metadata":{"application/vnd.jupyter.widget-view+json":{"colab":{"custom_widget_manager":{"url":"https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/2b70e893a8ba7c0f/manager.min.js"}}}}},{"output_type":"stream","name":"stderr","text":["<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n"]},{"output_type":"stream","name":"stdout","text":["\n","Epoch 001     \n","train_loss: 1.7442 eval_loss 1.7106     \n","train_acc 0.4481 eval_acc 0.4588     \n","train_rec 0.1448 eval_rec 0.1605     \n","train_pre nan eval_pre nan\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n"]},{"output_type":"stream","name":"stdout","text":["\n","Epoch 002     \n","train_loss: 1.6857 eval_loss 1.6986     \n","train_acc 0.4775 eval_acc 0.4635     \n","train_rec 0.1644 eval_rec 0.1733     \n","train_pre nan eval_pre nan\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n"]},{"output_type":"stream","name":"stdout","text":["\n","Epoch 003     \n","train_loss: 1.6647 eval_loss 1.6523     \n","train_acc 0.5026 eval_acc 0.5403     \n","train_rec 0.2062 eval_rec 0.3086     \n","train_pre nan eval_pre nan\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n"]},{"output_type":"stream","name":"stdout","text":["\n","Epoch 004     \n","train_loss: 1.6350 eval_loss 1.6370     \n","train_acc 0.5427 eval_acc 0.5469     \n","train_rec 0.2996 eval_rec 0.3181     \n","train_pre nan eval_pre nan\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n"]},{"output_type":"stream","name":"stdout","text":["\n","Epoch 005     \n","train_loss: 1.6255 eval_loss 1.6322     \n","train_acc 0.5486 eval_acc 0.5422     \n","train_rec 0.3082 eval_rec 0.3118     \n","train_pre nan eval_pre nan\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n"]},{"output_type":"stream","name":"stdout","text":["\n","Epoch 006     \n","train_loss: 1.6212 eval_loss 1.6286     \n","train_acc 0.5491 eval_acc 0.5431     \n","train_rec 0.3072 eval_rec 0.3181     \n","train_pre nan eval_pre nan\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n"]},{"output_type":"stream","name":"stdout","text":["\n","Epoch 007     \n","train_loss: 1.6179 eval_loss 1.6268     \n","train_acc 0.5524 eval_acc 0.5441     \n","train_rec 0.3103 eval_rec 0.3180     \n","train_pre nan eval_pre nan\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n"]},{"output_type":"stream","name":"stdout","text":["\n","Epoch 008     \n","train_loss: 1.6158 eval_loss 1.6243     \n","train_acc 0.5536 eval_acc 0.5460     \n","train_rec 0.3103 eval_rec 0.3204     \n","train_pre nan eval_pre nan\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:27: RuntimeWarning: invalid value encountered in divide\n","  running_recall += np.mean(np.diag(cm) / np.sum(cm, axis = 1))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n"]},{"output_type":"stream","name":"stdout","text":["\n","Epoch 009     \n","train_loss: 1.6133 eval_loss 1.6234     \n","train_acc 0.5583 eval_acc 0.5460     \n","train_rec nan eval_rec 0.3228     \n","train_pre nan eval_pre nan\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-11-acb7f400d60e>:28: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n"]},{"output_type":"stream","name":"stdout","text":["\n","Epoch 010     \n","train_loss: 1.6119 eval_loss 1.6219     \n","train_acc 0.5571 eval_acc 0.5469     \n","train_rec 0.3155 eval_rec 0.3238     \n","train_pre nan eval_pre nan\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n","<ipython-input-13-4de8b21fa58b>:24: RuntimeWarning: invalid value encountered in divide\n","  running_precision += np.mean(np.diag(cm) / np.sum(cm, axis = 0))\n"]}]},{"cell_type":"code","source":["probs, attention_weights, inputs, labels = predict(df_test, model_rubert_tiny_freezed, rubert_tokenizer, batch_size=64, max_length=32)\n","\n","batch_i = 0\n","seq_i = 0\n","head_i = 10\n","attention_matrix = attention_weights[batch_i][seq_i][head_i].cpu().numpy()\n","input_seq = inputs[0][seq_i].cpu().numpy()"],"metadata":{"id":"nuxOCBQHAKZC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["draw_attention_map(attention_matrix, input_seq, rubert_tokenizer)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":613},"id":"bfHLboWq_cyO","executionInfo":{"status":"ok","timestamp":1712189113384,"user_tz":-180,"elapsed":2333,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"53dfc19f-75c0-4ae5-9396-17f0345d1f68"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 900x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["len(history_rubert_tiny_freezed)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"L4Q04Pi1bUeY","executionInfo":{"status":"ok","timestamp":1712189176269,"user_tz":-180,"elapsed":10,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"9874f829-66e1-4f19-a85e-8785e8703c49"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["10"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["loss, acc, eval_loss, eval_acc, _, _, _, _, = zip(*history_rubert_tiny_freezed)"],"metadata":{"id":"2nsa-BVHJeAX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(8, 6))\n","plt.plot(loss, label=\"train_loss\")\n","plt.plot(eval_loss, label=\"eval_loss\")\n","plt.legend(loc='best')\n","plt.xlabel(\"epochs\")\n","plt.ylabel(\"loss\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":555},"executionInfo":{"status":"ok","timestamp":1712189217058,"user_tz":-180,"elapsed":17,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"39fa7301-06f0-447f-af9b-ef3bad9f261e","id":"bWqzsUxkJeAg"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["eval_acc_corr = []\n","for i in range(0,len(eval_acc)):\n","    eval_acc_corr.append(eval_acc[i].item())"],"metadata":{"id":"SJP2j8cYJeAk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(8, 6))\n","plt.plot(acc, label=\"train_acc\")\n","plt.plot(eval_acc_corr, label=\"eval_acc\")\n","plt.legend(loc='best')\n","plt.xlabel(\"epochs\")\n","plt.ylabel(\"acc\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":554},"executionInfo":{"status":"ok","timestamp":1712189222462,"user_tz":-180,"elapsed":411,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"6c78123c-53ff-433c-d6ad-0673fe0f7511","id":"01KPMkxvJeAn"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"I4r6Swq2duEK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"6PA_uf_zAUOo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model_rubert_tiny = TransformerClassificationModel(len(label2ind), rubert_tiny_backbone).to(device)"],"metadata":{"id":"RJMrFDnfAURY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["history_rubert_tiny = train(df_train, df_test, model_rubert_tiny, rubert_tokenizer,\n","                            epochs=10, batch_size=64, max_length=32, learning_rate=1e-3, L2_reg=1e-3, freeze_backbone=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":594,"referenced_widgets":["c65755385c7a492e852d9000c3f4c25f","41e324cb427847a8b7a695055ab832f5","6d5b62feced4447bba0e3caf842c1703","1d622a1d7d9a43dfabdd2cb3cd899024","72d71395112f4e90901b1e260e626553","9834c5fe740149bf874616959b4ffdec","1bc2904bca6b4e348106675a147ce105","2e37205ddeb647fc9a3c55cee6611315","f1aba28eba3e4fa7bd08d00982d7d201","0e893df8bb8b46178bdd76e3cbaed51e","88e358eded9348e49818d8a9811762e5"]},"id":"ce9IDhzwduHF","executionInfo":{"status":"ok","timestamp":1712148837879,"user_tz":-180,"elapsed":60707,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"02794bdd-1638-43d1-aaed-355cbf0e6be3"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["epoch:   0%|          | 0/10 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"c65755385c7a492e852d9000c3f4c25f"}},"metadata":{"application/vnd.jupyter.widget-view+json":{"colab":{"custom_widget_manager":{"url":"https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/2b70e893a8ba7c0f/manager.min.js"}}}}},{"output_type":"stream","name":"stdout","text":["loss 1.4856064201475263\n","\n","Epoch 001 train_loss: 1.4856     eval_loss 1.3502 train_acc 0.4640 eval_acc 0.5156\n","loss 1.2732287610860276\n","\n","Epoch 002 train_loss: 1.2732     eval_loss 1.2630 train_acc 0.5401 eval_acc 0.5412\n","loss 1.2087972790440884\n","\n","Epoch 003 train_loss: 1.2088     eval_loss 1.2328 train_acc 0.5619 eval_acc 0.5488\n","loss 1.1756006692924337\n","\n","Epoch 004 train_loss: 1.1756     eval_loss 1.2107 train_acc 0.5714 eval_acc 0.5517\n","loss 1.1526609301397506\n","\n","Epoch 005 train_loss: 1.1527     eval_loss 1.1920 train_acc 0.5768 eval_acc 0.5649\n","loss 1.1351409957780834\n","\n","Epoch 006 train_loss: 1.1351     eval_loss 1.1839 train_acc 0.5792 eval_acc 0.5602\n","loss 1.122370412192564\n","\n","Epoch 007 train_loss: 1.1224     eval_loss 1.1768 train_acc 0.5835 eval_acc 0.5630\n","loss 1.1128854798501902\n","\n","Epoch 008 train_loss: 1.1129     eval_loss 1.1677 train_acc 0.5799 eval_acc 0.5640\n","loss 1.1018756857524272\n","\n","Epoch 009 train_loss: 1.1019     eval_loss 1.1639 train_acc 0.5877 eval_acc 0.5687\n","loss 1.0961720093893972\n","\n","Epoch 010 train_loss: 1.0962     eval_loss 1.1552 train_acc 0.5910 eval_acc 0.5754\n"]}]},{"cell_type":"code","source":["probs, attention_weights, inputs, labels = predict(df_test, model_rubert_tiny, rubert_tokenizer, batch_size=64, max_length=32)\n","\n","batch_i = 0\n","seq_i = 0\n","head_i = 10\n","attention_matrix = attention_weights[batch_i][seq_i][head_i].cpu().numpy()\n","input_seq = inputs[0][seq_i].cpu().numpy()"],"metadata":{"id":"-KE0l43ZAard"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["draw_attention_map(attention_matrix, input_seq, rubert_tokenizer)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":611},"executionInfo":{"status":"ok","timestamp":1712148847066,"user_tz":-180,"elapsed":517,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"eb8f0009-e8e0-4a46-b026-744a48223bbe","id":"z7Zm7n5GAare"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 900x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["loss, acc, eval_loss, eval_acc = zip(*history_rubert_tiny)"],"metadata":{"id":"hvngeMnPd1mZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(8, 6))\n","plt.plot(loss, label=\"train_loss\")\n","plt.plot(eval_loss, label=\"eval_loss\")\n","plt.legend(loc='best')\n","plt.xlabel(\"epochs\")\n","plt.ylabel(\"loss\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":556},"executionInfo":{"status":"ok","timestamp":1712148859051,"user_tz":-180,"elapsed":327,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"2a5cfe04-d8a4-4a68-8336-658a39c14eb8","id":"PqxksG4Qd1mb"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["eval_acc_corr = []\n","for i in range(0,len(eval_acc)):\n","    eval_acc_corr.append(eval_acc[i].item())"],"metadata":{"id":"V4vHh8_Id1mc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(8, 6))\n","plt.plot(acc, label=\"train_acc\")\n","plt.plot(eval_acc_corr, label=\"eval_acc\")\n","plt.legend(loc='best')\n","plt.xlabel(\"epochs\")\n","plt.ylabel(\"acc\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":554},"executionInfo":{"status":"ok","timestamp":1712148866429,"user_tz":-180,"elapsed":13,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"445f9405-4b45-49c3-920f-7321afa21d5a","id":"CtKBnpSud1md"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### Задание 5 (1 балл)\n","\n","Обучите *tbs17/MathBert* (с замороженным backbone и без заморозки), проанализируйте результаты. Сравните скоры с первым заданием. Получилось лучше или нет? Почему?"],"metadata":{"id":"zRi7tkoOAjon"}},{"cell_type":"code","source":["from transformers import BertTokenizer, BertModel"],"metadata":{"id":"uVPMQUEMJx7D"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["tf_tokenizer = BertTokenizer.from_pretrained('tbs17/MathBERT', output_hidden_states=True)"],"metadata":{"id":"QHfMjv9tJx9h"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["tf_backbone = BertModel.from_pretrained(\"tbs17/MathBERT\", output_attentions=True)"],"metadata":{"id":"g6AC4cMee_hp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model_tf_freezed = TransformerClassificationModel(len(label2ind), tf_backbone).to(device)"],"metadata":{"id":"ZUQU7eDtJ-9J"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["history_tf_freezed = train(df_train, df_test, model_tf_freezed, tf_tokenizer,\n","                           epochs=10, batch_size=64, max_length=32, learning_rate=1e-3, L2_reg=1e-3, freeze_backbone=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":594,"referenced_widgets":["65a58b6b23a24376a0de6ac38da65b04","a7d41ac796e34aa2ba933c7c23411792","97debfea2f4d4fefb4a3fc2b473e95a6","05d8bab5f4354c50849e80b82ace5fb6","42cbec63bcb94f72829093878d5a7d3c","1f5807712d02460a8f5f02ae7ab09231","4c90417a73044dbda432ab0e1b81a23b","3e0d08d0d31b4c7895643931025aab2a","da2410c1fbda48f38f13afaa03633d2d","03b99abe084e4fdc8701e81d727bf684","0b31d9bbb5ac47218fcbcceccbfe2756"]},"id":"zaLSIfomfgmd","executionInfo":{"status":"ok","timestamp":1712149087479,"user_tz":-180,"elapsed":210069,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"d19384b7-e762-494a-aca4-9c103f85c3fd"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["epoch:   0%|          | 0/10 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"65a58b6b23a24376a0de6ac38da65b04"}},"metadata":{"application/vnd.jupyter.widget-view+json":{"colab":{"custom_widget_manager":{"url":"https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/2b70e893a8ba7c0f/manager.min.js"}}}}},{"output_type":"stream","name":"stdout","text":["loss 1.5687009833219663\n","\n","Epoch 001 train_loss: 1.5687     eval_loss 1.4601 train_acc 0.4587 eval_acc 0.4863\n","loss 1.3769554982766432\n","\n","Epoch 002 train_loss: 1.3770     eval_loss 1.3946 train_acc 0.5104 eval_acc 0.4976\n","loss 1.3178851822644628\n","\n","Epoch 003 train_loss: 1.3179     eval_loss 1.3890 train_acc 0.5313 eval_acc 0.5014\n","loss 1.2951446319994286\n","\n","Epoch 004 train_loss: 1.2951     eval_loss 1.3587 train_acc 0.5277 eval_acc 0.5062\n","loss 1.2515108279562381\n","\n","Epoch 005 train_loss: 1.2515     eval_loss 1.3297 train_acc 0.5410 eval_acc 0.5185\n","loss 1.2359910272998005\n","\n","Epoch 006 train_loss: 1.2360     eval_loss 1.3204 train_acc 0.5500 eval_acc 0.5261\n","loss 1.218765284564044\n","\n","Epoch 007 train_loss: 1.2188     eval_loss 1.3183 train_acc 0.5529 eval_acc 0.5175\n","loss 1.197548378751763\n","\n","Epoch 008 train_loss: 1.1975     eval_loss 1.3415 train_acc 0.5626 eval_acc 0.5232\n","loss 1.2000361488802618\n","\n","Epoch 009 train_loss: 1.2000     eval_loss 1.3313 train_acc 0.5602 eval_acc 0.5204\n","loss 1.1855382877483702\n","\n","Epoch 010 train_loss: 1.1855     eval_loss 1.3256 train_acc 0.5683 eval_acc 0.5156\n"]}]},{"cell_type":"code","source":["probs, attention_weights, inputs, labels = predict(df_test, model_tf_freezed, tf_tokenizer, batch_size=64, max_length=32)\n","\n","batch_i = 0\n","seq_i = 0\n","head_i = 10\n","attention_matrix = attention_weights[batch_i][seq_i][head_i].cpu().numpy()\n","input_seq = inputs[0][seq_i].cpu().numpy()"],"metadata":{"id":"HMRhL0lUB-Hy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["draw_attention_map(attention_matrix, input_seq, rubert_tokenizer)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":634},"executionInfo":{"status":"ok","timestamp":1712149094819,"user_tz":-180,"elapsed":1073,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"cbbb472c-ff9b-4199-eb9c-5b2f13e0fbba","id":"IxekqXibB-H1"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 900x600 with 2 Axes>"],"image/png":"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r3JvRGhoKG3atOG9997j0KFDdOzYkZMnT7J9+3b69OnDL7/8Uu61vXr14sEHH+Tee++ladOm7Nmzhz179tCyZUumT59uq8cREbmpqRAREamCkt6Q6OjoCtu1atWKnj17snPnTrZv3054eDh//OMfOX/+PNu3b+frr7/m8uXLREVFmQuRmJgYHBwc+OKLL/j0008pLi5mypQp5iIgMjKSDh068N5775GWlsZnn31G/fr1adasGQMGDODee+81/HyV5VCW1q1bs27dOpYuXcq//vUvdu3ahZubG7169eKJJ56osGCrCerXr8/777/PokWL2LVrF1999RWtW7dm0qRJPPzww2zatKnca8ePH094eDjvv/8+mzZton79+gwdOpRnnnmmwgnyIiLyPw6m369TKCIiIuVasmQJcXFxrFixgh49elzvdEREbmja0FBERERERK45FSIiIiIiInLNqRAREREREZFrTnNERERERETkmlOPiIiIiIiIXHMqRERERERE5JpTISIiIiIiItecNjSswbZs2cKbb77JTz/9RL169ejUqRNTpkwhMDCwWvFuG/Se4Zy+/qiV4Riujp6GYwA4OBivo201ReqbrDOGYwTe0tIGmcCpghOGYyze72Y4RhPXYsMxACZ3umA4hi1+VwAuXi4yHMOrXgcbZCIiUhv4Xu8EAKh364N2i11wfJXdYt8I1CNSQ+3bt4+nnnqKy5cvM2PGDB5//HGcnZ3JyMi43qmJiIiI1BoODo52+6nt1CNSQ+3evZvLly/z4osv0qlTJwAefvjh65yViIiIiIhtqBSrodq3bw/AmjVrKC62zRAXEREREbGOA452+6nt9A7UUH369KF79+6sXr2aBx98kAMHDlzvlEREREREbEaFSA316quv8u233/Lcc89x/vx5oqOjmTt3LhcuGJ+4KyIiIiJVozki9qN3oAbKz8/nnXfeYeLEiTzyyCMkJSXx9NNPEx8fz8MPP8zly5evd4oiIiIiIoZosnoNVFxczKVLlzh58iQAzs7OTJw4ETc3N/785z+zc+dOevfufZ2zFBEREbn5qefCfvTO1kDu7u5ERESwevVq4uLiuHTpEoB5/xBb7X0hIiIiInK9qEekhnrxxRdp1qwZS5cu5eOPP+app57igw8+oEOHDgQHB1/v9ERERERqBQcHh+udwk1LPSI1lIuLC8899xwbNmygadOmPPXUUxw+fJjly5fj4uJyvdMTERERqSUc7fhTu+kdqOH8/PxYsWIFTz75JL/99hurV6++3imJiIiIiBimQuQGMXnyZDw8PNi7d+/1TkVERESk1tDyvfajd6CGWb9+PX5+fsycOZPly5fTq1cv/Pz8eP/99zl//jydOnW63imKiIiIiBjmYNISTDXKiRMn+Prrr8nNzWXx4sXk5eWZz/Xr149XXnmFunXrViv2j+c3Gs7vu2zj6xv4eRYZjgHQpK7xXH7Jt82eLEdynAzH6O1tm7k/Tg7G4zy+s9hwjLjgfMMxAIpNl2wQxTYTDWftbmA4xt/uaWGDTEREagPf650AAA1ve8Jusc/98JbdYt8ItGpWDdO6dWtat24NQHR0NEeOHCEnJ4dWrVrh7e19nbMTEREREbENFSI1mIuLC35+ftc7DREREZFay0EzGexGhUgNkpOTw7Jly/jiiy84fvw4ubm5NGvWjL59+/Lkk0/i4eFxvVMUEREREbEJFSI1yMmTJ0lISCA8PJxBgwbh4uLC/v37WbVqFXv27CE+Ph5nZ+frnaaIiIhIraHVrexHhUgN0rZtWz799NNSxUbXrl2JjY0lNTWVgQMHXqfsRERERGofFSL2o3e2BnFxcTEXIUVFRZw/f56srCyCgoIA+Oabb65neiIiIiIiNqMekRomPj6eDz/8kMOHD1NUZLnM7blz565PUiIiIiK1lHpE7EeFSA3y/vvvM3/+fHr27MkLL7xAs2bNcHFxoaioiAkTJqAtX0RERETkZqFCpAZJTEykZcuWvPPOOzg6/q/6/vHHH69jViIiIiK1l4ONNsWV0tTXVIOUFB/Fxf/b1dpkMvHGG29cr5REREREROxCPSI1yMCBA1m0aBGPPvooAwYM4MKFC2zZsoVLly5d79REREREaiXNEbEfFSI1yKOPPgrA2rVrefHFF2nYsCH9+vXjmWeeoXv37tc5OxERERER21EhUo5Zs2axYcMGvv/++2t2T0dHRyZMmMCECRMsji9ZsgSAKVOmXLNcREREREQ9IvakQsQKaWlp7Nq1i3HjxuHh4XG907Fa8/oNDceoV+ec4Ri5l2wz6SvnUlHljSqRX2Sbf1yauBZX3qgSTg4uNsgEjuRkG45x+GxDwzGyC43//QB41WtqOEZB0X9skAnUr2P871lERG4sKkTsR+9sOf785z+zb98+i2O7du0iLi6O8+fPX6esRERERET+Z/PmzQwfPpwuXbpw991388QTT3Do0KEqXfvpp5/yxz/+kb59+xIYGEjXrl257777yv28O2vWLPz8/Mr8eemll6zOXT0iVzGZTOTn5+Pm5na9UxERERGR667mfm+fkJBAbGwsvr6+TJ8+nYsXL7Jy5UpGjhzJqlWr8PPzq/D6w4cPAzB06FCaNWvGpUuX2L9/P2+++SYff/wx69ato379+qWuW7hwYaljt912m9X51+pCZP369Tz//PO899577N+/n/Xr15OZmcnEiRPJzMy0mCMyZswYdu3aBUC/fv3MMaZMmcLUqVNZsmQJcXFxpKam0qpVK4v7jBkzhszMTLZt22Y+9tlnn7F+/Xr27dvHmTNnqFOnDh07duTRRx+lb9++1+DpRURERORGlZ2dzYIFC/D29mbVqlW4u7sDcO+99zJ48GDmzZvHihUrKozx2GOP8dhjj5U63r59exYtWsTmzZsZMmRIqfORkZE2eYZaXYiUWLhwIQUFBQwZMoTGjRvj7e1NZmamRZsnnngCT09PtmzZwvPPP0+jRo0AKq00y7NhwwZ+/fVX7r//fry9vcnKymLDhg388Y9/5NVXX2XQoEGGn0tEREREjKmpc0RSU1PJzc3l4YcfNhchAC1atGDAgAFs2LCBkydP0rx5c6tjt2zZEqDc6Qgmk4m8vDzq1auHk5NT9R4AFSIA5OXlkZiYaDEc65///KdFm5CQEL7++mu2bNlCWFhYqV4Pa/35z38u1dU1btw4hgwZwhtvvKFCREREROQm9/tRNmVJTU0t99w333wDQGBgYKlzgYGBbNiwgf3791epEMnLy+PixYvk5+eTkZHBokWLcHZ2JiQkpMz23bp1Izc3FycnJzp37syECRMIDw+v9D5XUyECjBo16prPCfl9EZKfn8/FixcxmUz06NGDNWvWkJuba1HdioiIiMi1V1N7RE6fPg2At7d3qXMlx06dOlWlWH/+85/ZsGGD+fXtt9/O0qVLad++vUW7W265hTFjxtC5c2caNGjA0aNHWblyJVOmTGHGjBllDvOqiAoRwMfH55rf8+eff+a1117jX//6F+fOnSt1/vz58ypERERERG5iFfV4VKagoAAAF5fSy/+XHLtw4UKVYj322GPcf//9nDt3jq+//pqvvvqqzM+nM2bMKHVs5MiRREVF8de//pXBgwdbNRRMhQhQt25dwzEcHMrfG6OoyHI/hby8PEaPHk1OTg5jx47Fz88Pd3d3HB0dWbduHcnJyRQXa78CERERkevNoYaumlWvXj0ACgsLS50rOVbVz7i33XabedWrQYMGkZKSwpNPPomTkxODBw+u8Fo3Nzcefvhh5syZw2effUZ0dHSVn0GFiBUqKjY8PT2BKysYXD1/5MSJExbV6pdffsnJkyeZN28ew4YNs2gbHx9vw4xFRERExIiaOjTLy8sLuDL86uohVCVDssoatlUV/fv3x83NjdWrV1daiADmz77/+Y91GwjXzHe2hiqZ15GdXXrn6pLhXZ9//rnF8Y8++oizZ89aHCtZXcBkMlkc/+6779i6davN8hURERGRm1NAQAAAe/fuLXUuPT0dAH9//2rFvnz5MpcuXSrzM29Zjh49CkCTJk2suo96RKxw5513ArBo0SLuu+8+XF1duf322/H19aVnz57cdtttvPbaa2RlZdGmTRsOHDjAtm3baNOmjcXwrK5du9K0aVNeeuklfv75Z1q2bMmPP/5IfHw8vr6+fPvtt9frEUVERETkdyoaEXM9hYWFMW/ePBISEhg/frx5bvEvv/zCJ598Qvfu3c3zNQoKCvjll19o0KABzZo1M8c4e/YsTZs2LRV71apVFBYW0qVLF/Ox/Px8nJyccHV1tWiblZXFsmXLcHFxoVevXlY9gwoRK9x1111Mnz6d1atXM3v2bIqKipgyZQq+vr44Ojry5ptv8pe//IXVq1fj4OBAt27d+Mc//sGcOXMs9iXx8PDg3XffZdGiRea/aD8/PxYtWkRGRoYKERERERGpkKenJzNnzuSFF17gwQcfZMSIERQWFrJy5UoAYmJizG337dvH2LFjiYqKYsGCBebjERERBAYG0rlzZ7y8vMjOzmbXrl18+umntGzZkilTppjbHjt2jEcffZR+/frRpk0bPDw8OHLkCOvXryc7O5vZs2ebh4tVlYPp6vFBctPKL/q34RjnCs8ZjpF7yTbfLNSrY/xX93SBbUYnXrbB2gL+jT2MBwGO5FStG7Uij6Q2NBwjfuBvhmMAeNWzrpu3LAVF1o1ZLc/cvfUrb1SJvwYZ24NIRKT28L3eCQBw651/sVvs49/EGo7xySef8M4773Do0CGcnZ3p1q0bTz/9NB06dDC3SUtLK7MQeeONN/j88885evQo586dw8XFhTZt2hAaGsr48ePNc6DhSu/Jyy+/zIEDBzhz5gwFBQU0bNiQLl26MH78eO6++26rc69xhUjJG/Xiiy8ydOjQasU4ePAgCxYsICMjg/PnzzNlyhSioqLo168fU6ZMYerUqTbOGpYsWUJcXBypqamGNzu0FxUipakQKZsKkbKpEBERuZZUiNzsbrqhWUVFRUydOpWioiKeeuopGjRogJ+fn01ir1+/nvPnzzN+/HibxLvWLl42/gG1fh0nwzF+PG+b2tetjvGCplld2yyT7Opk/JkcHWzzn2MDZ+O5nN1xtvJGlcju62w4BoCnyznDMeo41jOeCDCiXYFN4oiIyI2jpi7fezOocYXI3Xffzb59+6hTp3qpnThxghMnTjBr1ixGjx5tPv7zzz8bzm3Dhg1kZmaWWYj88Y9/5PHHHy9zUxkREREREbFU4woRR0fHUrPxrfHrr78CWIxpuxbq1KlT7eJJRERERGqmmrqPyM2gxr2zaWlp+Pn5sX79+lKvExMTue+++/D396dXr1688sorXL582Xxt3759zb0gzz//PH5+fvj5+VXYG/Lhhx/y6KOP0rt3bzp37kxwcDBTp07l0KFDFu38/PzYtWsXmZmZ5rh+fn6kpaUBV+aIlHWv06dPExMTQ69evejcuTO9e/dm9uzZnDlzptznruw5RUREROTacHBwtNtPbXfDfIW/Zs0aTp8+zbBhw2jcuDFbtmzh7bffxt3dnccffxyA//f//h/79+/nrbfeYsSIEdx1110ANG7cmKysrDLjLlu2jDvvvJNRo0bRqFEjjh49ytq1a9m5cyeJiYnceuutACxcuJC33nqL3377jeeff958/dU7Wf7e6dOneeCBB8jKymLYsGF06NCB7777joSEBP7973+zdu3aUhu/VOU5RURERERudDdMIZKZmcnHH39sHnI1cuRIIiIiWLFihfkDelhYGA0aNOCtt96iS5cuREZGmq8vrxBJTk4275heIioqiqioKN577z1eeOEFACIjI1m7di0XL160iFuRxYsXc/bsWfMGiCW6du3Kc889x6uvvsq8efOsfk4RERERuTY0Wd1+bph39oEHHrCY9+Ho6EhwcDBnz54lLy+v2nFLihCTyURubi5ZWVnccsst+Pj48M0331Q7bnFxMVu3bsXHx8eiCIErRc2tt97Kli1buHr1ZHs9p4iIiIhITXLD9IiUtTdHw4YNATh37hxubm7Virt7927eeOMN9u7dy4ULFyq9Z1VlZWWRl5eHr2/pNbAdHBy47bbb2LZtG9nZ2ebnKO+etnhOEREREakGzeWwmxumEHFyKn//iuruyXjgwAHGjx9Pq1ateOaZZ2jVqhX16tXDwcGBefPmUVBw7fcMsMdzioiIiIjUNDdMIWIPGzdupKioiGXLltG6dWuLc+fOnTO0jHDjxo1xc3Pj8OHDpc6ZTCZ++OEHPD09r/kywyIiIiJSdVrdyn5q9Tvr6Hjl8a/uaVi1apV5P5Lfc3NzIzs7u0o9E46OjoSFhfHTTz/xySefWJxLSkri+PHjhIeH4+BgfHdwEREREZEbTa3uEenfvz/Lly9nwoQJDB8+nLp16/L111/z2Wefceutt5bau+POO+9k+/bt/OlPfyIwMBAnJyeCgoK45ZZbyow/bdo0Pv/8c5599lnS0tLw9fU1L9/bvHlznnnmmWvxmCIiIiJSTfrS2H5qdSESGBjIG2+8wRtvvMGSJUtwcXGha9eufPDBB8ydO5fMzEyL9uPHj+fEiROkpKSwevVqiouLWbFiRbmFiLe3N2vXrmXJkiVs2bKF+Ph4GjduzAMPPMDUqVNL7SEiIiIiIjWLlu+1HweTZkDXGr9dTDYcwxbjJPdn2eZXzs0GZXSTusXGgwCuTsafydOlqQ0ygTMFpYcVWqvPrCLDMRL/5Gw4BsCt7uUv4FBVTg4uNsgEDvx2ofJGlQhudrsNMhERqQ1Krzx6PdzebYndYh/+aqrdYt8IanWPSG1Tr07ZPTfWyC86azjGhmPuhmMAzAzINRzj+3O2+U+gRX3jBU39Ovk2yATyi4x3IW+Zb/x92ZdlvIAAaOVmvCgqKDIeA+CDH43/7gY3s0EiIiJyzWiyuv3onRURERERkWtOPSIiIiIiIuXRZHW7UY+IiIiIiIhcc+oREREREREpj762txu9tSIiIiIics2pR0REREREpDyaI2I3KkRERERERMqjQsRuNDRLRERERESuOfWIiIiIiIiUR1/b243eWhERERERuebUIyIiIiIiUg6T5ojYjXpERERERETkmlOPiIiIiIhIedQhYjfqEbGBtLQ0/Pz8WL9+/fVORURERETkhqAekVrE0cHFcAwnB1fDMSJaXzAcA6Cuk7PhGJn5tvmao+Cy8TiNXfNskAk0Mv5XxAtfNzAcY27XHOOJAC6O7oZj5BXZ5r3NvaTvbkREah1HdYnYiwoREREREZHyaLK63ejrvRtMbm7u9U5BRERERMSwm7IQWb9+PX5+fnzxxRe89dZb9OvXD39/f+6//34+/fRTAH744QcmTpzIXXfdRbdu3Zg1axZ5ef8bvnH69GleeukloqKi6N69O507d2bAgAG8+uqrXLhQtaFFW7du5c477+Shhx7i3LlzAJhMJuLj4xk2bBhdunShS5cujBw5kq1bt5a63s/Pj1mzZpGWlsaYMWPo2rUr999/v/E3SERERESqxsGOP7XcTT00a/HixRQWFvLggw/i5OTEihUrmDx5Mq+99hoxMTHce++9zJgxg/T0dDZs2ICLiwt/+tOfAPj+++9JSUmhX79+PPDAA5hMJnbt2sXbb79NRkYGf//73yu89z/+8Q/mz59P//79efnll3FxuTI/4/nnnycxMZF+/fpx3333AbBlyxYmT57MnDlzePDBBy3iHDhwgJSUFB544AEiIiIsiiURERERkRvVTV2IXLp0ibVr15qLgKCgIIYMGcLkyZN55ZVXGDRoEAAjR47k/PnzrF+/nueeew43Nze6d+/O1q1bcXT8X6fRmDFjePXVV3nrrbfYt28fAQEBpe5pMplYuHAh7777Lg8//DDPPfccDv8dW7h161Y2bNjA888/z/jx483XjBs3jieeeIJFixZx33334e7+v8m5hw8f5u9//zu9e/e2x1skIiIiIhXRZHW7uSmHZpUYNWqUuQgB6NixI+7u7jRt2tRchJTo3r07ly5dIjMzE4C6deuai5BLly5x7tw5srKyCAkJAWDfvn2l7nfx4kWefvppli9fzuzZs5k1a5a5CAFISkqibt263HvvvWRlZVn8hIWFkZubS3p6ukXMDh06qAgRERERkZvOTd0j0rp161LHPD098fb2LnXcw8MDwDyX4/Lly7zzzjts2LCBo0ePUlxcbNG+pN3vLVq0iNzcXP7yl78QHR1d6vyPP/7IhQsXKiwsfv31V4vXbdu2LbetiIiIiNiZVs2ym5u6EPn9sKrfc3JyKvcak8kEwEsvvcT777/PgAEDmDBhArfccgvOzs6cPn2aWbNmmdv9XlhYGJs3b+a9996jd+/eeHl5WZwvLi6mQYMGvP76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7LPP6NWrV6Wb1YiIiIiI3ChUiNiRo6Mjb775Jn//+99JSkoiNTUVNzc3wsLCePLJJ/Hx8bFo7+vry5o1a3jttddYvXo1eXl5tGzZkieffJIJEyZUujO7iIiIiNiYJpXbjQoRG/n+++/LPO7q6sqUKVMqXOr399q3b8/rr79uy9RERERERGocFSK1yIm8nw3HaFbXzXCM/1z8j+EYAE3quhiOseIH23zL0a7BZcMx8ovO2CAT+CnHyXCMuC3jDcfIOFdsOAbALXXPGo7h4mj89xaggbPJJnFEROQGog4Ru9FYHxERERERuebUIyIiIiIiUh6tmmU3KkSslJuby7Jly/j88885fvw4ubm5NGvWjD59+vDkk0+a9wWBK8vupqamcvjwYbKysmjQoAHdunVj6tSp+Pr6WsTt27cvLVu25E9/+hMLFy5k165dFBcX061bN2JjY2nTps01flIREREREftRIWKl06dPEx8fT3h4OIMGDcLFxYX9+/ezZs0a9uzZw9q1a3F2dgZg2bJl3HnnnYwaNYpGjRpx9OhR1q5dy86dO0lMTOTWW28tFXv06NH07duX6dOnc+zYMVauXMmkSZPYuHGjVs0SERERudbUI2I3KkSs1Lp1az799FNzsVGia9euxMbGsnXrVu69914AkpOTqV+/vkW7qKgooqKieO+993jhhRcszh07dozFixcTERFhPta4cWMWL17M559/zj333GOnpxIRERGRsphUh9iNvmK3kouLi7kIKSoq4vz582RlZREUFATAvn37zG1LihCTyURubi5ZWVnccsst+Pj48M0335SK3axZM4siBKBnz54AHD161B6PIyIiIiJyXahHpBri4+P58MMPOXz4MEVFRRbnzp07Z/7z7t27eeONN9i7dy8XLlywaNeqVatScVu3bl3qWMmck9/HFREREZFrREOz7EaFiJXef/995s+fT8+ePXnhhRdo1qwZLi4uFBUVMWHCBEymK/sMHDhwgPHjx9OqVSueeeYZWrVqRb169XBwcGDevHkUFBSUiu3kVP7+DyVxRURERERuBipErJSYmEjLli155513LCaP//jjjxbtNm7cSFFREcuWLSvV03Hu3DlcXV2vSb4iIiIiYoCDekTsRXNErFRSfBQX/2/XaJPJxBtvvFFmu6t7MlatWsWvv/5q5yxFRERERGo29YhYaeDA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GjZsCMC5c+dwc3Ordi4rVqwgNzeXJ554gmeeeabacURERETEoBo+l2Pz5s0sW7aMQ4cO4ezszF133cW0adPw9fWt9Npt27aRmppKeno6v/zyC66urrRp04bo6GiGDBlCnTqWpcKsWbPYsGFDmbEeeeQRnnvuOatyVyFSTU5O5e8bYTJVvtdGUVFRuedCQkL46quvWLduHffffz/t27evVo4iIiIicvNKSEggNjYWX19fpk+fzsWLF1m5ciUjR45k1apV+Pn5VXj97NmzqVevHmFhYbRv356cnBw+/vhjYmJi2Lx5M2+//XapkUIACxcuLHXstttuszp/FSL/1bZtW44ePUp+fn6Ve0WqomHDhnz77beljp84caLca26//Xaefvppxo8fz+jRo3n33Xfp2LGjzXISERERkSqqocv3Zmdns2DBAry9vVm1ahXu7u4A3HvvvQwePJh58+axYsWKCmMsWrSIoKAgi2Jj3LhxjBkzhk8//ZR//etf/OEPfyh1XWRkpE2eQXNE/uv+++8nPz+f1157rdS5siarV5WPjw95eXns27fP4vg777xT4XXt2rXjgw8+oF69eowdO5Zvvvmm2jmIiIiIyM0lNTWV3NxcoqOjzUUIQIsWLRgwYABpaWmcPHmywhjBwcGlejycnJwYOHAgAN9//32Z15lMJnJzc0ttW2Et9Yj819ixY9mxYwfLly8nIyOD3r174+7uztGjR9m5cyfJycnVijtixAjeffddJk2axNixY6lXrx47duwgNze30mtbt27Nhx9+yLhx4xg/fjxvv/023bt3r1YeIiIiIlINduwR6devX4XnU1NTyz1X8iV1YGBgqXOBgYFs2LCB/fv307x5c6vzOn36NAC33HJLmee7detGbm4uTk5OdO7cmQkTJhAeHm71fdQj8l/Ozs688847TJ8+nXPnzrFkyRJefvllvvjiC3NVWB0tW7bkrbfeolmzZrz++ussXbqUVq1asWzZsipd7+3tzQcffECrVq2YMGEC//73v6udi4iIiIjcHEqKBW9v71LnSo6dOnXK6rinTp1izZo1eHp6liqUbrnlFsaMGcPs2bNZunQpzz77LGfPnmXKlClV/mz7e+oR+R0XFxcmTJjAhAkTzKsCJCUlWbTp0aNHud1UU6dOZerUqaWO33PPPdxzzz2ljl8dp1WrVmXGXrVqFYcO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7jkEBwdj4MCBMDQ0bNJm6tSpHZ8YEREREcnhYHXSGfb29m22kUgknL6XiIiISAvwiQjpjM8//7yzUyAiIiIiBfGJCBERERERdTg+EaHHVmJiIgAgICAAEolE3G4Lx4gQERERdT4+EaHHlr29PSQSCX766ScYGxuL263d0hwjQkRERKQd+ESEHlsNY0KMjY3ltomIiIhI+/GJCBERERERdTguaEhERERERB2OhQgREREREXU4FiJERERERNThWIgQEREREVGHYyFCREREREQdjtP3EhFRE3Z2dkq1f//99xEUFKShbIiISBexECEioiZef/31Jvv279+PsrIyzJkzBxYWFnLHHBwcOio1IiLSEVxHhIiIFDJx4kQUFhYiIyMDAwcO7Ox0iIjoMccnIkREpLLU1FT84x//wIULF3D//n0MHjwY/v7+mDdvHoyNjTs7PSIi0kIcrE5ERCqJjo7GG2+8gV9//RX+/v4IDQ2FIAiIjo7GggULUFtb29kpEhGRFuITESIiarecnBx8+umnsLKyQnx8PPr06QMAWLFiBV5//XVkZmZiz549ePXVVzs5UyIi0jZ8IkJERO127NgxAMBrr70mFiEA0KVLF6xatQoGBgaIj4/vrPSIiEiLsRAhIqJ2y8vLAwC4ubk1OWZjY4N+/frht99+Q1lZWUenRkREWo6FCBERtVtDgfHo05BHNey/d+9eh+VERESPBxYiRETUbubm5gCAP/74o9njxcXFcu2IiIgasBAhIqJ2a1jIMCsrq8mxa9eu4fbt2xg4cGCTBRCJiIhYiBARUbu9+OKLAICPP/4YJSUl4v76+nps3rwZDx48QHBwcGelR0REWozT9xIRUbuNGjUKCxcuxK5du+Dv7w9fX1907doV//rXv3Dp0iU89dRTWLBgQWenSUREWoiFCBERqSQiIgKOjo44cOAAEhMTUVdXhyeeeALLli3D/PnzubI6ERE1SyIIgtDZSRARERERkX7hGBEiIiIiIupwLESIiIiIiKjDsRAhIiIiIqIOx0KEiIiIiIg6HAsRIiIiIiLqcCxEiIiIiIiow7EQISIiIiKiDsdChIiIiIiIOhwLESIiIiIi6nAsRIiIiIiIqMOxECEiIiIiog7HQoSIiIiIiDrc/wOAwC3CteOANwAAAABJRU5ErkJggg==\n"},"metadata":{}}]},{"cell_type":"code","source":["loss, acc, eval_loss, eval_acc = zip(*history_tf_freezed)"],"metadata":{"id":"VF-dKigyfuVv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(8, 6))\n","plt.plot(loss, label=\"train_loss\")\n","plt.plot(eval_loss, label=\"eval_loss\")\n","plt.legend(loc='best')\n","plt.xlabel(\"epochs\")\n","plt.ylabel(\"loss\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":554},"executionInfo":{"status":"ok","timestamp":1712149108737,"user_tz":-180,"elapsed":16,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"55b9dee0-4dbb-47a4-c515-f338377d452e","id":"eMVBqk6HfuVx"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["eval_acc_corr = []\n","for i in range(0,len(eval_acc)):\n","    eval_acc_corr.append(eval_acc[i].item())"],"metadata":{"id":"7IYA-iK0fuVz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(8, 6))\n","plt.plot(acc, label=\"train_acc\")\n","plt.plot(eval_acc_corr, label=\"eval_acc\")\n","plt.legend(loc='best')\n","plt.xlabel(\"epochs\")\n","plt.ylabel(\"acc\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":554},"executionInfo":{"status":"ok","timestamp":1712149109902,"user_tz":-180,"elapsed":10,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"fe851519-9bbd-4070-aaf1-e9a5cd8547d9","id":"55yorRLAfuVz"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"t1eGCuBkgIyz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model_tf = TransformerClassificationModel(len(label2ind), tf_backbone).to(device)"],"metadata":{"id":"44W_mLfdBcSK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["history_tf = train(df_train, df_test, model_tf, tf_tokenizer,\n","                  epochs=10, batch_size=64, max_length=32, learning_rate=1e-3, L2_reg=1e-3, freeze_backbone=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":594,"referenced_widgets":["cd2f4d029d1a4340ab0a5117d77adf0f","6e5fddbb6c7644ea9bbd98f4de084868","237c0ea613a045ecbfe86311fcaf2791","8f58bdb1eded4fb28ce6237b6d3e5223","df86138ece214c8c80a5afddc60ba5b4","4392250167794dc2b2da971b68c9b7e9","3d510e069b1c495c8cb05a9d6409c1a5","61a9ec8e026f4db08e215ed24ba7feea","ef53909aef2a4ff5afe972b79d7683c6","89a35610b3724486997177e9e573725c","722d40ddbf874d599bfc72236ad4b0f2"]},"outputId":"11f7f223-ff88-4064-9dde-e08226a263e8","id":"nTzr_DhegJAo","executionInfo":{"status":"ok","timestamp":1712149337407,"user_tz":-180,"elapsed":205079,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}}},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["epoch:   0%|          | 0/10 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"cd2f4d029d1a4340ab0a5117d77adf0f"}},"metadata":{"application/vnd.jupyter.widget-view+json":{"colab":{"custom_widget_manager":{"url":"https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/2b70e893a8ba7c0f/manager.min.js"}}}}},{"output_type":"stream","name":"stdout","text":["loss 1.543080344704329\n","\n","Epoch 001 train_loss: 1.5431     eval_loss 1.4810 train_acc 0.4635 eval_acc 0.4891\n","loss 1.375950739868674\n","\n","Epoch 002 train_loss: 1.3760     eval_loss 1.3856 train_acc 0.5138 eval_acc 0.5024\n","loss 1.3202671026833084\n","\n","Epoch 003 train_loss: 1.3203     eval_loss 1.3586 train_acc 0.5280 eval_acc 0.5204\n","loss 1.2803935322392999\n","\n","Epoch 004 train_loss: 1.2804     eval_loss 1.3502 train_acc 0.5417 eval_acc 0.5156\n","loss 1.2536929421314078\n","\n","Epoch 005 train_loss: 1.2537     eval_loss 1.3346 train_acc 0.5434 eval_acc 0.5156\n","loss 1.2421495073946125\n","\n","Epoch 006 train_loss: 1.2421     eval_loss 1.3212 train_acc 0.5472 eval_acc 0.5299\n","loss 1.2226851777535244\n","\n","Epoch 007 train_loss: 1.2227     eval_loss 1.3171 train_acc 0.5562 eval_acc 0.5261\n","loss 1.1980159144765565\n","\n","Epoch 008 train_loss: 1.1980     eval_loss 1.3558 train_acc 0.5526 eval_acc 0.5071\n","loss 1.1936990147577524\n","\n","Epoch 009 train_loss: 1.1937     eval_loss 1.3571 train_acc 0.5664 eval_acc 0.5185\n","loss 1.1854128192080429\n","\n","Epoch 010 train_loss: 1.1854     eval_loss 1.3271 train_acc 0.5657 eval_acc 0.5194\n"]}]},{"cell_type":"code","source":["probs, attention_weights, inputs, labels = predict(df_test, model_tf, tf_tokenizer, batch_size=64, max_length=32)\n","\n","batch_i = 0\n","seq_i = 0\n","head_i = 10\n","attention_matrix = attention_weights[batch_i][seq_i][head_i].cpu().numpy()\n","input_seq = inputs[0][seq_i].cpu().numpy()"],"metadata":{"id":"LeSs4t8zC1rV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["draw_attention_map(attention_matrix, input_seq, rubert_tokenizer)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":634},"executionInfo":{"status":"ok","timestamp":1712149347151,"user_tz":-180,"elapsed":15,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"a3c29b3a-0e31-404e-d2ca-347251c79da2","id":"IR8jeSeRC1rV"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 900x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["loss, acc, eval_loss, eval_acc = zip(*history_tf)"],"metadata":{"id":"s4LU9c-TgJAq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(8, 6))\n","plt.plot(loss, label=\"train_loss\")\n","plt.plot(eval_loss, label=\"eval_loss\")\n","plt.legend(loc='best')\n","plt.xlabel(\"epochs\")\n","plt.ylabel(\"loss\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":554},"executionInfo":{"status":"ok","timestamp":1712149355387,"user_tz":-180,"elapsed":12,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"752e43e2-7905-4fc4-cb84-439fdb03a786","id":"61IhLCtYgJAr"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["eval_acc_corr = []\n","for i in range(0,len(eval_acc)):\n","    eval_acc_corr.append(eval_acc[i].item())"],"metadata":{"id":"hCt0lobDgJAs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(8, 6))\n","plt.plot(acc, label=\"train_acc\")\n","plt.plot(eval_acc_corr, label=\"eval_acc\")\n","plt.legend(loc='best')\n","plt.xlabel(\"epochs\")\n","plt.ylabel(\"acc\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":554},"executionInfo":{"status":"ok","timestamp":1712149355850,"user_tz":-180,"elapsed":470,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"8273ffb5-4e10-437a-d950-a5d88c417601","id":"kOailUKxgJAt"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["### YOUR CODE IS HERE (probably, similar on the previous step)"],"metadata":{"id":"XL6DOcfVgJAv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["### YOUR CODE IS HERE (probably, similar on the previous step)"],"metadata":{"id":"XKtd3YgNA14E"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Задание 6 (1 балл)\n","\n","Напишите функцию для отрисовки карт внимания первого слоя для моделей из задания"],"metadata":{"id":"EuU6Di26017B"}},{"cell_type":"code","source":["def draw_first_layer_attention_maps(attention_head_ids: List, text: str, model: TransformerClassificationModel):\n","    pass"],"metadata":{"id":"guzGxfcV1Cba"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"1e3WMPjmolT5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"lNwFLFAEomz9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"LlmpxRCfom4w"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Задание 7 (1 балл)\n","\n","Проведите инференс для всех моделей **ДО ДООБУЧЕНИЯ** на 2-3 текстах из датасета. Посмотрите на головы Attention первого слоя в каждой модели на выбранных текстах (отрисуйте их отдельно).\n","\n","Попробуйте их проинтерпретировать. Какие связи улавливают карты внимания? (если в модели много голов Attention, то проинтерпретируйте наиболее интересные)"],"metadata":{"id":"Iu0adKw4BLtF"}},{"cell_type":"code","source":["### YOUR CODE IS HERE"],"metadata":{"id":"U2gEF3vkB6eR"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Задание 8 (1 балл)\n","\n","Сделайте то же самое для дообученных моделей. Изменились ли карты внимания и связи, которые они улавливают? Почему?"],"metadata":{"id":"pBNVrOpCCLqk"}},{"cell_type":"code","source":["### YOUR CODE IS HERE"],"metadata":{"id":"F5229WBICWEr"},"execution_count":null,"outputs":[]}]}