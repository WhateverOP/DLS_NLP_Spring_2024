{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1q77WixYXvCFQtvRD-RbCQe7zC06hn7d7","timestamp":1708365361858},{"file_id":"12BxEICwjMhOcIQID1zn06K6kFG92GZcf","timestamp":1708035269638},{"file_id":"1pYR9hzeFxq1T5kZThLvgA7bkmcNQtbrq","timestamp":1707661673565}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"4cd64d81ed394d4898cdfc97620aea54":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_e1070a2a65e742d4a49cc3787b34c0d9","IPY_MODEL_a068ed3c7ff64ab1ba4ccf9cf2c61864","IPY_MODEL_c07f40c02c224113b9fd784abdf905bb"],"layout":"IPY_MODEL_c38413547b8e43c78fde598eb069c737"}},"e1070a2a65e742d4a49cc3787b34c0d9":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c09ba4915d9447cbac18c36250a7f1a0","placeholder":"​","style":"IPY_MODEL_2e3f997eab1047ecbfff4cca213ba370","value":"100%"}},"a068ed3c7ff64ab1ba4ccf9cf2c61864":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_be9d40ec70b146bea78cd84a4e8ba9b0","max":5273,"min":0,"orientation":"horizontal","style":"IPY_MODEL_14b303f4e6414730bd96df386034b984","value":5273}},"c07f40c02c224113b9fd784abdf905bb":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_fcc2f07afdcc4308a778571bb9025af1","placeholder":"​","style":"IPY_MODEL_5cac4f525f584344a71c493b0e067f35","value":" 5273/5273 [00:03&lt;00:00, 1885.69it/s]"}},"c38413547b8e43c78fde598eb069c737":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c09ba4915d9447cbac18c36250a7f1a0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2e3f997eab1047ecbfff4cca213ba370":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"be9d40ec70b146bea78cd84a4e8ba9b0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"14b303f4e6414730bd96df386034b984":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"fcc2f07afdcc4308a778571bb9025af1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5cac4f525f584344a71c493b0e067f35":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"cells":[{"cell_type":"markdown","source":["<p style=\"align: center;\"><img src=\"https://static.tildacdn.com/tild6636-3531-4239-b465-376364646465/Deep_Learning_School.png\" width=\"400\"></p>\n","\n","# Глубокое обучение. Часть 2\n","# Домашнее задание по теме \"Механизм внимания\""],"metadata":{"id":"Ji8KtYOVGs8_"}},{"cell_type":"markdown","source":["Это домашнее задание проходит в формате peer-review. Это означает, что его будут проверять ваши однокурсники. Поэтому пишите разборчивый код, добавляйте комментарии и пишите выводы после проделанной работы.\n","\n","В этом задании вы будете решать задачу классификации математических задач по темам (многоклассовая классификация) с помощью Transformer.\n","\n","В качестве датасета возьмем датасет математических задач по разным темам. Нам необходим следующий файл:\n","\n","[Файл с классами](https://docs.google.com/spreadsheets/d/1IMRxByfg7gjoZ5i7rxvuNDvSrbdOJOc-/edit?usp=drive_link&ouid=104379615679964018037&rtpof=true&sd=true)"],"metadata":{"id":"UAr-M8_1GJ6W"}},{"cell_type":"markdown","source":["**Hint:** не перезаписывайте модели, которые вы получите на каждом из этапов этого дз. Они ещё понадобятся."],"metadata":{"id":"1fybMcmV0YRA"}},{"cell_type":"code","source":["from google.colab import output\n","output.enable_custom_widget_manager()\n","\n","from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NLcJan2ja75W","executionInfo":{"status":"ok","timestamp":1711974120054,"user_tz":-180,"elapsed":26755,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"97fc95b8-5a03-4bf5-d9cb-167dbfa24a0f"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["path_to_data = '/content/drive/MyDrive/Deep_Learning_MIPT_2/hw_transformers/data_problems.xlsx'"],"metadata":{"id":"TwHa12Sfa8B8","executionInfo":{"status":"ok","timestamp":1711974120055,"user_tz":-180,"elapsed":9,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["import torch\n","import torch.nn as nn\n","from torch.utils.data import Dataset, DataLoader\n","\n","import numpy as np\n","import matplotlib.pyplot as plt\n","\n","from tqdm.auto import tqdm\n","from nltk.tokenize import word_tokenize\n","from sklearn.model_selection import train_test_split\n","from sklearn.utils import shuffle\n","import nltk\n","\n","from collections import Counter\n","from typing import List\n","import string\n","\n","import random\n","\n","from transformers import DistilBertModel\n","\n","import seaborn\n","seaborn.set(palette='summer')"],"metadata":{"id":"B8Pk1bI0cL5h","executionInfo":{"status":"ok","timestamp":1711977773061,"user_tz":-180,"elapsed":464,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}}},"execution_count":50,"outputs":[]},{"cell_type":"code","source":["nltk.download('punkt')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qAHmTInJoOOR","executionInfo":{"status":"ok","timestamp":1711974494260,"user_tz":-180,"elapsed":10,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"658d8ca2-6f0a-4f75-d9de-4e8339637dbc"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Unzipping tokenizers/punkt.zip.\n"]},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["init_df = pd.read_excel(path_to_data)"],"metadata":{"id":"nXJG_ysHccw-","executionInfo":{"status":"ok","timestamp":1711974501093,"user_tz":-180,"elapsed":2885,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["print(f'init_df.shape = {init_df.shape}')\n","print(f'init_df.keys() = {init_df.keys()}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sLUviegHckfI","executionInfo":{"status":"ok","timestamp":1711974501094,"user_tz":-180,"elapsed":19,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"4fee144f-8a76-4e8b-c63d-f875595b6d92"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["init_df.shape = (5273, 3)\n","init_df.keys() = Index(['Unnamed: 0', 'Задача', 'Тема'], dtype='object')\n"]}]},{"cell_type":"code","source":["df = init_df.drop(columns=['Unnamed: 0'])"],"metadata":{"id":"TyHpjm52dAwg","executionInfo":{"status":"ok","timestamp":1711974501094,"user_tz":-180,"elapsed":16,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["df = df.rename(columns={'Задача': 'text', 'Тема': 'label'})"],"metadata":{"id":"1yGhGdmiwIhB","executionInfo":{"status":"ok","timestamp":1711976579611,"user_tz":-180,"elapsed":491,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}}},"execution_count":41,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"oUcvrN4zdKFf","executionInfo":{"status":"ok","timestamp":1711976582417,"user_tz":-180,"elapsed":14,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"82d9a0c0-7edc-4011-94d5-8509535b2b9e"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                text  label\n","0  Между девятью планетами Солнечной системы введ...  Графы\n","1  В стране Цифра есть 9 городов с названиями 1, ...  Графы\n","2  В государстве 100 городов, и из каждого из них...  Графы\n","3  В классе 30 человек. Может ли быть так, что 9 ...  Графы\n","4  В городе Маленьком 15 телефонов. Можно ли их с...  Графы"],"text/html":["\n","  <div id=\"df-9772dcac-1247-4611-b681-07318d73804e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>text</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Между девятью планетами Солнечной системы введ...</td>\n","      <td>Графы</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>В стране Цифра есть 9 городов с названиями 1, ...</td>\n","      <td>Графы</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>В государстве 100 городов, и из каждого из них...</td>\n","      <td>Графы</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>В классе 30 человек. Может ли быть так, что 9 ...</td>\n","      <td>Графы</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>В городе Маленьком 15 телефонов. Можно ли их с...</td>\n","      <td>Графы</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9772dcac-1247-4611-b681-07318d73804e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9772dcac-1247-4611-b681-07318d73804e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9772dcac-1247-4611-b681-07318d73804e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-30fabece-3f1d-403f-bd9b-aac08ae5e8bb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-30fabece-3f1d-403f-bd9b-aac08ae5e8bb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-30fabece-3f1d-403f-bd9b-aac08ae5e8bb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 5273,\n  \"fields\": [\n    {\n      \"column\": \"text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4350,\n        \"samples\": [\n          \"\\u041d\\u0430 \\u0433\\u0440\\u0430\\u0444\\u0438\\u043a\\u0435 \\u043c\\u043d\\u043e\\u0433\\u043e\\u0447\\u043b\\u0435\\u043d\\u0430 \\u0441 \\u0446\\u0435\\u043b\\u044b\\u043c\\u0438 \\u043a\\u043e\\u044d\\u0444\\u0444\\u0438\\u0446\\u0438\\u0435\\u043d\\u0442\\u0430\\u043c\\u0438 \\u043e\\u0442\\u043c\\u0435\\u0447\\u0435\\u043d\\u044b \\u0434\\u0432\\u0435 \\u0442\\u043e\\u0447\\u043a\\u0438 \\u0441 \\u0446\\u0435\\u043b\\u044b\\u043c\\u0438 \\u043a\\u043e\\u043e\\u0440\\u0434\\u0438\\u043d\\u0430\\u0442\\u0430\\u043c\\u0438. \\r\\n\\u0414\\u043e\\u043a\\u0430\\u0436\\u0438\\u0442\\u0435, \\u0447\\u0442\\u043e \\u0435\\u0441\\u043b\\u0438 \\u0440\\u0430\\u0441\\u0441\\u0442\\u043e\\u044f\\u043d\\u0438\\u0435 \\u043c\\u0435\\u0436\\u0434\\u0443 \\u043d\\u0438\\u043c\\u0438 \\u2013 \\u0446\\u0435\\u043b\\u043e\\u0435 \\u0447\\u0438\\u0441\\u043b\\u043e, \\u0442\\u043e \\u0441\\u043e\\u0435\\u0434\\u0438\\u043d\\u044f\\u044e\\u0449\\u0438\\u0439 \\u0438\\u0445 \\u043e\\u0442\\u0440\\u0435\\u0437\\u043e\\u043a \\u043f\\u0430\\u0440\\u0430\\u043b\\u043b\\u0435\\u043b\\u0435\\u043d \\u043e\\u0441\\u0438 \\u0430\\u0431\\u0441\\u0446\\u0438\\u0441\\u0441. \",\n          \"\\u0412 \\u0442\\u0430\\u0431\\u043b\\u0438\\u0446\\u0443 n\\u00d7n \\u0437\\u0430\\u043f\\u0438\\u0441\\u0430\\u043d\\u044b n\\u00b2 \\u0447\\u0438\\u0441\\u0435\\u043b, \\u0441\\u0443\\u043c\\u043c\\u0430 \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0445 \\u043d\\u0435\\u043e\\u0442\\u0440\\u0438\\u0446\\u0430\\u0442\\u0435\\u043b\\u044c\\u043d\\u0430. \\u0414\\u043e\\u043a\\u0430\\u0436\\u0438\\u0442\\u0435, \\u0447\\u0442\\u043e \\u043c\\u043e\\u0436\\u043d\\u043e \\u043f\\u0435\\u0440\\u0435\\u0441\\u0442\\u0430\\u0432\\u0438\\u0442\\u044c \\u0441\\u0442\\u043e\\u043b\\u0431\\u0446\\u044b \\u0442\\u0430\\u0431\\u043b\\u0438\\u0446\\u044b \\u0442\\u0430\\u043a, \\u0447\\u0442\\u043e \\u0441\\u0443\\u043c\\u043c\\u0430 n \\u0447\\u0438\\u0441\\u0435\\u043b \\u043f\\u043e \\u0434\\u0438\\u0430\\u0433\\u043e\\u043d\\u0430\\u043b\\u0438, \\u0438\\u0434\\u0443\\u0449\\u0435\\u0439 \\u0438\\u0437 \\u043b\\u0435\\u0432\\u043e\\u0433\\u043e \\u043d\\u0438\\u0436\\u043d\\u0435\\u0433\\u043e \\u0443\\u0433\\u043b\\u0430 \\u0432 \\u043f\\u0440\\u0430\\u0432\\u044b\\u0439 \\u0432\\u0435\\u0440\\u0445\\u043d\\u0438\\u0439, \\u0431\\u0443\\u0434\\u0435\\u0442 \\u043d\\u0435\\u043e\\u0442\\u0440\\u0438\\u0446\\u0430\\u0442\\u0435\\u043b\\u044c\\u043d\\u0430.\",\n          \"\\u0420\\u0435\\u0448\\u0438\\u0442\\u044c \\u0432 \\u0446\\u0435\\u043b\\u044b\\u0445 \\u0447\\u0438\\u0441\\u043b\\u0430\\u0445 \\u0443\\u0440\\u0430\\u0432\\u043d\\u0435\\u043d\\u0438\\u0435 \\u00a0 xy/z + xz/y + yz/x = 3.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"\\u0413\\u0440\\u0430\\u0444\\u044b\",\n          \"\\u0413\\u0435\\u043e\\u043c\\u0435\\u0442\\u0440\\u0438\\u044f\",\n          \"\\u0418\\u043d\\u0432\\u0430\\u0440\\u0438\\u0430\\u043d\\u0442\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["words = Counter()\n","proccessed_text_test_list = []\n","\n","for example in tqdm(df['text']):\n","    proccessed_text = example.lower().translate(str.maketrans(string.punctuation, ' '*len(string.punctuation)))\n","    proccessed_text_test_list.append(proccessed_text)\n","\n","    for word in word_tokenize(proccessed_text):\n","        words[word] += 1\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":49,"referenced_widgets":["4cd64d81ed394d4898cdfc97620aea54","e1070a2a65e742d4a49cc3787b34c0d9","a068ed3c7ff64ab1ba4ccf9cf2c61864","c07f40c02c224113b9fd784abdf905bb","c38413547b8e43c78fde598eb069c737","c09ba4915d9447cbac18c36250a7f1a0","2e3f997eab1047ecbfff4cca213ba370","be9d40ec70b146bea78cd84a4e8ba9b0","14b303f4e6414730bd96df386034b984","fcc2f07afdcc4308a778571bb9025af1","5cac4f525f584344a71c493b0e067f35"]},"id":"eItnLGZAmzF9","executionInfo":{"status":"ok","timestamp":1711976594315,"user_tz":-180,"elapsed":3494,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"0770debd-e4f1-486a-9729-61b7a8bc512c"},"execution_count":43,"outputs":[{"output_type":"display_data","data":{"text/plain":["  0%|          | 0/5273 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"4cd64d81ed394d4898cdfc97620aea54"}},"metadata":{"application/vnd.jupyter.widget-view+json":{"colab":{"custom_widget_manager":{"url":"https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/2b70e893a8ba7c0f/manager.min.js"}}}}}]},{"cell_type":"code","source":["index = 122\n","print(df['text'].iloc[index])\n","print(proccessed_text_test_list[index])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uZAf8PpAoq5r","executionInfo":{"status":"ok","timestamp":1711976594316,"user_tz":-180,"elapsed":13,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"2475d975-5222-4cde-ad30-c09f611485e5"},"execution_count":44,"outputs":[{"output_type":"stream","name":"stdout","text":["Петя заметил, что у всех его 25 одноклассников различное число друзей в этом\r\n","классе. Сколько друзей у Пети? \n","петя заметил  что у всех его 25 одноклассников различное число друзей в этом\r\n","классе  сколько друзей у пети  \n"]}]},{"cell_type":"code","source":["words_df_idxs = np.arange(len(words))\n","words_df = pd.DataFrame(data=list(words.items()),columns=['key','val'],index=words_df_idxs)\n","words_df_sorted = words_df.sort_values(by=['val'], ascending=False)\n","words_df_sorted_reindexed = words_df_sorted.reset_index(drop=True)"],"metadata":{"id":"szQpczI7tFfb","executionInfo":{"status":"ok","timestamp":1711976596724,"user_tz":-180,"elapsed":5,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}}},"execution_count":45,"outputs":[]},{"cell_type":"code","source":["words_df_sorted_reindexed.head(-5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"lSP2KKphtNhX","executionInfo":{"status":"ok","timestamp":1711976599526,"user_tz":-180,"elapsed":11,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"29f2d33c-ee35-442b-f9f1-3f451da07a84"},"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                key   val\n","0                 в  6087\n","1                 и  5750\n","2                на  4714\n","3               что  4265\n","4                по  3766\n","...             ...   ...\n","14475  пассажирском     1\n","14476     автомашин     1\n","14477   симпатичным     1\n","14478   симпатичных     1\n","14479           65b     1\n","\n","[14480 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-b7987b57-b8aa-422e-9580-1f8f8065f8b6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>key</th>\n","      <th>val</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>в</td>\n","      <td>6087</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>и</td>\n","      <td>5750</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>на</td>\n","      <td>4714</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>что</td>\n","      <td>4265</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>по</td>\n","      <td>3766</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>14475</th>\n","      <td>пассажирском</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14476</th>\n","      <td>автомашин</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14477</th>\n","      <td>симпатичным</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14478</th>\n","      <td>симпатичных</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14479</th>\n","      <td>65b</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>14480 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b7987b57-b8aa-422e-9580-1f8f8065f8b6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b7987b57-b8aa-422e-9580-1f8f8065f8b6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b7987b57-b8aa-422e-9580-1f8f8065f8b6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-587c386e-b0f5-4ed5-95b3-ae32e08ccf84\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-587c386e-b0f5-4ed5-95b3-ae32e08ccf84')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-587c386e-b0f5-4ed5-95b3-ae32e08ccf84 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"words_df_sorted_reindexed","summary":"{\n  \"name\": \"words_df_sorted_reindexed\",\n  \"rows\": 14485,\n  \"fields\": [\n    {\n      \"column\": \"key\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 14485,\n        \"samples\": [\n          \"108240\",\n          \"219\",\n          \"\\u043f\\u043e\\u043b\\u0443\\u0447\\u0438\\u0432\\u0448\\u0438\\u0435\\u0441\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"val\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 123,\n        \"min\": 1,\n        \"max\": 6087,\n        \"num_unique_values\": 317,\n        \"samples\": [\n          425,\n          37,\n          1013\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["vocab = set(['<unk>', '<bos>', '<eos>', '<pad>'])\n","# counter_threshold = 0\n","counter_threshold = 10\n","\n","for char, cnt in words.items():\n","    if cnt > counter_threshold:\n","        vocab.add(char)\n","\n","print(f'Размер словаря: {len(vocab)}')\n","\n","word2ind = {char: i for i, char in enumerate(vocab)}\n","ind2word = {i: char for char, i in word2ind.items()}"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AnHWnOhPofGK","executionInfo":{"status":"ok","timestamp":1711976604067,"user_tz":-180,"elapsed":13,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"dabff1c3-96ec-4134-cd71-e0b2468f44ff"},"execution_count":47,"outputs":[{"output_type":"stream","name":"stdout","text":["Размер словаря: 2289\n"]}]},{"cell_type":"code","source":["class WordDataset:\n","    def __init__(self, sentences):\n","        self.data = sentences\n","        self.unk_id = word2ind['<unk>']\n","        self.bos_id = word2ind['<bos>']\n","        self.eos_id = word2ind['<eos>']\n","        self.pad_id = word2ind['<pad>']\n","\n","    def __getitem__(self, idx: int) -> List[int]:\n","        processed_text = self.data[idx]['text'].lower().translate(str.maketrans(string.punctuation, ' '*len(string.punctuation)))\n","        tokenized_sentence = [self.bos_id]\n","        tokenized_sentence += [word2ind.get(word, self.unk_id) for word in word_tokenize(processed_text)]\n","        tokenized_sentence += [self.eos_id]\n","\n","        train_sample = {\n","            \"text\": tokenized_sentence,\n","            \"label\": self.data[idx]['label']\n","        }\n","\n","        return train_sample\n","\n","    def __len__(self) -> int:\n","        return len(self.data)\n","\n","\n","def collate_fn_with_padding(\n","    input_batch: List[List[int]], pad_id=word2ind['<pad>'], max_len=256) -> torch.Tensor:\n","    seq_lens = [len(x['text']) for x in input_batch]\n","    max_seq_len = min(max(seq_lens), max_len)\n","\n","    new_batch = []\n","    for sequence in input_batch:\n","        sequence['text'] = sequence['text'][:max_seq_len]\n","        for _ in range(max_seq_len - len(sequence['text'])):\n","            sequence['text'].append(pad_id)\n","\n","        new_batch.append(sequence['text'])\n","\n","    sequences = torch.LongTensor(new_batch).to(device)\n","    labels = torch.LongTensor([x['label'] for x in input_batch]).to(device)\n","\n","    new_batch = {\n","        'input_ids': sequences,\n","        'label': labels\n","    }\n","\n","    return new_batch"],"metadata":{"id":"zeQAeQLlsD6-","executionInfo":{"status":"ok","timestamp":1711976611199,"user_tz":-180,"elapsed":459,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}}},"execution_count":48,"outputs":[]},{"cell_type":"code","source":["# X_train, X_test, y_train, y_test = train_test_split(df['text'], df['label'], test_size=0.2, random_state=42)\n","df_shuffled = shuffle(df)"],"metadata":{"id":"92CeZoZVuKKT","executionInfo":{"status":"ok","timestamp":1711977818737,"user_tz":-180,"elapsed":339,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}}},"execution_count":51,"outputs":[]},{"cell_type":"code","source":["df_train = df_shuffled[:int(len(df_shuffled)*0.8)]\n","df_test  = df_shuffled[int(len(df_shuffled)*0.8):]"],"metadata":{"id":"tvpYBGDy1Ix_","executionInfo":{"status":"ok","timestamp":1711977991321,"user_tz":-180,"elapsed":371,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}}},"execution_count":55,"outputs":[]},{"cell_type":"code","source":["df_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"v8UVE02f7Ftq","executionInfo":{"status":"ok","timestamp":1711979398452,"user_tz":-180,"elapsed":3418,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"b43981cf-aac9-45be-e071-77345a5383bb"},"execution_count":69,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                   text          label\n","2167  В однокруговом хоккейном турнире принимало уча...  Комбинаторика\n","880   Найдите все значения параметра r, при которых ...      Многочлен\n","4194  Найдите все такие простые числа p и q , что  p...   Теория чисел\n","340   В стране больше 101 города. Столица соединена ...          Графы\n","2908  Существуют ли такие попарно различные натураль...   Теория чисел\n","...                                                 ...            ...\n","3819  Может ли число  1·2 + 2·3 + ... + k(k + 1)  пр...   Теория чисел\n","3872  По окружности записали красным пять несократим...   Теория чисел\n","4160  Докажите, что при простых  p > 7  число  p4 − ...   Теория чисел\n","2     В государстве 100 городов, и из каждого из них...          Графы\n","1713     б) Занумеруем колышки числами 1, 2, 3. Треб...  Комбинаторика\n","\n","[4218 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-781f6aa3-4c3e-4535-b438-512ab08a4ded\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>text</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2167</th>\n","      <td>В однокруговом хоккейном турнире принимало уча...</td>\n","      <td>Комбинаторика</td>\n","    </tr>\n","    <tr>\n","      <th>880</th>\n","      <td>Найдите все значения параметра r, при которых ...</td>\n","      <td>Многочлен</td>\n","    </tr>\n","    <tr>\n","      <th>4194</th>\n","      <td>Найдите все такие простые числа p и q , что  p...</td>\n","      <td>Теория чисел</td>\n","    </tr>\n","    <tr>\n","      <th>340</th>\n","      <td>В стране больше 101 города. Столица соединена ...</td>\n","      <td>Графы</td>\n","    </tr>\n","    <tr>\n","      <th>2908</th>\n","      <td>Существуют ли такие попарно различные натураль...</td>\n","      <td>Теория чисел</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3819</th>\n","      <td>Может ли число  1·2 + 2·3 + ... + k(k + 1)  пр...</td>\n","      <td>Теория чисел</td>\n","    </tr>\n","    <tr>\n","      <th>3872</th>\n","      <td>По окружности записали красным пять несократим...</td>\n","      <td>Теория чисел</td>\n","    </tr>\n","    <tr>\n","      <th>4160</th>\n","      <td>Докажите, что при простых  p &gt; 7  число  p4 − ...</td>\n","      <td>Теория чисел</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>В государстве 100 городов, и из каждого из них...</td>\n","      <td>Графы</td>\n","    </tr>\n","    <tr>\n","      <th>1713</th>\n","      <td>б) Занумеруем колышки числами 1, 2, 3. Треб...</td>\n","      <td>Комбинаторика</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4218 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-781f6aa3-4c3e-4535-b438-512ab08a4ded')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-781f6aa3-4c3e-4535-b438-512ab08a4ded button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-781f6aa3-4c3e-4535-b438-512ab08a4ded');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1343d94f-794f-41ef-a938-6d63302ba619\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1343d94f-794f-41ef-a938-6d63302ba619')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1343d94f-794f-41ef-a938-6d63302ba619 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_train","summary":"{\n  \"name\": \"df_train\",\n  \"rows\": 4218,\n  \"fields\": [\n    {\n      \"column\": \"text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3595,\n        \"samples\": [\n          \"\\u0421\\u0440\\u0435\\u0434\\u0438 \\u0443\\u0447\\u0430\\u0441\\u0442\\u043d\\u0438\\u043a\\u043e\\u0432 \\u043e\\u043b\\u0438\\u043c\\u043f\\u0438\\u0430\\u0434\\u044b \\u043a\\u0430\\u0436\\u0434\\u044b\\u0439 \\u0437\\u043d\\u0430\\u043a\\u043e\\u043c \\u043d\\u0435 \\u043c\\u0435\\u043d\\u0435\\u0435 \\u0447\\u0435\\u043c \\u0441 \\u0442\\u0440\\u0435\\u043c\\u044f \\u0434\\u0440\\u0443\\u0433\\u0438\\u043c\\u0438. \\u0414\\u043e\\u043a\\u0430\\u0436\\u0438\\u0442\\u0435, \\u0447\\u0442\\u043e \\u043c\\u043e\\u0436\\u043d\\u043e \\u0432\\u044b\\u0431\\u0440\\u0430\\u0442\\u044c \\u0433\\u0440\\u0443\\u043f\\u043f\\u0443 \\u0438\\u0437 \\u0447\\u0451\\u0442\\u043d\\u043e\\u0433\\u043e \\u0447\\u0438\\u0441\\u043b\\u0430 \\u0443\\u0447\\u0430\\u0441\\u0442\\u043d\\u0438\\u043a\\u043e\\u0432 (\\u0431\\u043e\\u043b\\u044c\\u0448\\u0435 \\u0434\\u0432\\u0443\\u0445 \\u0447\\u0435\\u043b\\u043e\\u0432\\u0435\\u043a) \\u0438 \\u043f\\u043e\\u0441\\u0430\\u0434\\u0438\\u0442\\u044c \\u0438\\u0445 \\u0437\\u0430 \\u043a\\u0440\\u0443\\u0433\\u043b\\u044b\\u0439 \\u0441\\u0442\\u043e\\u043b \\u0442\\u0430\\u043a, \\u0447\\u0442\\u043e\\u0431\\u044b \\u043a\\u0430\\u0436\\u0434\\u044b\\u0439 \\u0431\\u044b\\u043b \\u0437\\u043d\\u0430\\u043a\\u043e\\u043c \\u0441 \\u043e\\u0431\\u043e\\u0438\\u043c\\u0438 \\u0441\\u043e\\u0441\\u0435\\u0434\\u044f\\u043c\\u0438. \",\n          \"\\u041d\\u0430 \\u0441\\u0442\\u043e\\u0440\\u043e\\u043d\\u0430\\u0445 \\u043d\\u0435\\u043a\\u043e\\u0442\\u043e\\u0440\\u043e\\u0433\\u043e \\u043c\\u043d\\u043e\\u0433\\u043e\\u0443\\u0433\\u043e\\u043b\\u044c\\u043d\\u0438\\u043a\\u0430 \\u0440\\u0430\\u0441\\u0441\\u0442\\u0430\\u0432\\u043b\\u0435\\u043d\\u044b \\u0441\\u0442\\u0440\\u0435\\u043b\\u043a\\u0438. \\r\\n\\u0414\\u043e\\u043a\\u0430\\u0436\\u0438\\u0442\\u0435, \\u0447\\u0442\\u043e \\u0447\\u0438\\u0441\\u043b\\u043e \\u0432\\u0435\\u0440\\u0448\\u0438\\u043d, \\u0432 \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0435 \\u0432\\u0445\\u043e\\u0434\\u044f\\u0442 \\u0434\\u0432\\u0435 \\u0441\\u0442\\u0440\\u0435\\u043b\\u043a\\u0438, \\u0440\\u0430\\u0432\\u043d\\u043e \\u0447\\u0438\\u0441\\u043b\\u0443 \\u0432\\u0435\\u0440\\u0448\\u0438\\u043d, \\u0438\\u0437 \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0445 \\u0432\\u044b\\u0445\\u043e\\u0434\\u044f\\u0442 \\u0434\\u0432\\u0435 \\u0441\\u0442\\u0440\\u0435\\u043b\\u043a\\u0438.\",\n          \"\\u041c\\u043e\\u0436\\u043d\\u043e \\u043b\\u0438 \\u043e\\u0442\\u043c\\u0435\\u0442\\u0438\\u0442\\u044c k \\u0432\\u0435\\u0440\\u0448\\u0438\\u043d \\u043f\\u0440\\u0430\\u0432\\u0438\\u043b\\u044c\\u043d\\u043e\\u0433\\u043e 14-\\u0443\\u0433\\u043e\\u043b\\u044c\\u043d\\u0438\\u043a\\u0430 \\u0442\\u0430\\u043a, \\u0447\\u0442\\u043e \\u043a\\u0430\\u0436\\u0434\\u044b\\u0439 \\u0447\\u0435\\u0442\\u044b\\u0440\\u0451\\u0445\\u0443\\u0433\\u043e\\u043b\\u044c\\u043d\\u0438\\u043a \\u0441 \\u0432\\u0435\\u0440\\u0448\\u0438\\u043d\\u0430\\u043c\\u0438 \\u0432 \\u043e\\u0442\\u043c\\u0435\\u0447\\u0435\\u043d\\u043d\\u044b\\u0445 \\u0442\\u043e\\u0447\\u043a\\u0430\\u0445, \\u0438\\u043c\\u0435\\u044e\\u0449\\u0438\\u0439 \\u0434\\u0432\\u0435 \\u043f\\u0430\\u0440\\u0430\\u043b\\u043b\\u0435\\u043b\\u044c\\u043d\\u044b\\u0435 \\u0441\\u0442\\u043e\\u0440\\u043e\\u043d\\u044b, \\u044f\\u0432\\u043b\\u044f\\u0435\\u0442\\u0441\\u044f \\u043f\\u0440\\u044f\\u043c\\u043e\\u0443\\u0433\\u043e\\u043b\\u044c\\u043d\\u0438\\u043a\\u043e\\u043c, \\u0435\\u0441\\u043b\\u0438: \\u00a0\\u0430) k = 6; \\u00a0 \\u0431) k \\u2265 7? \"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"\\u041a\\u043e\\u043c\\u0431\\u0438\\u043d\\u0430\\u0442\\u043e\\u0440\\u0438\\u043a\\u0430\",\n          \"\\u041c\\u043d\\u043e\\u0433\\u043e\\u0447\\u043b\\u0435\\u043d\",\n          \"\\u0413\\u0435\\u043e\\u043c\\u0435\\u0442\\u0440\\u0438\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":69}]},{"cell_type":"code","source":["train_dataset = WordDataset(df_train)\n","eval_dataset = WordDataset(df_test)"],"metadata":{"id":"IhPGslGZv56L","executionInfo":{"status":"ok","timestamp":1711978175360,"user_tz":-180,"elapsed":4,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}}},"execution_count":61,"outputs":[]},{"cell_type":"code","source":["train_dataset.data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"TTeDPduo7jG5","executionInfo":{"status":"ok","timestamp":1711979536357,"user_tz":-180,"elapsed":12,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}},"outputId":"e340282b-7b96-43f1-cc41-2194a6c656fb"},"execution_count":75,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                   text          label\n","2167  В однокруговом хоккейном турнире принимало уча...  Комбинаторика\n","880   Найдите все значения параметра r, при которых ...      Многочлен\n","4194  Найдите все такие простые числа p и q , что  p...   Теория чисел\n","340   В стране больше 101 города. Столица соединена ...          Графы\n","2908  Существуют ли такие попарно различные натураль...   Теория чисел\n","...                                                 ...            ...\n","3819  Может ли число  1·2 + 2·3 + ... + k(k + 1)  пр...   Теория чисел\n","3872  По окружности записали красным пять несократим...   Теория чисел\n","4160  Докажите, что при простых  p > 7  число  p4 − ...   Теория чисел\n","2     В государстве 100 городов, и из каждого из них...          Графы\n","1713     б) Занумеруем колышки числами 1, 2, 3. Треб...  Комбинаторика\n","\n","[4218 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-7a12a6fc-37e6-4fc2-9e5a-55dd4f347a55\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>text</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2167</th>\n","      <td>В однокруговом хоккейном турнире принимало уча...</td>\n","      <td>Комбинаторика</td>\n","    </tr>\n","    <tr>\n","      <th>880</th>\n","      <td>Найдите все значения параметра r, при которых ...</td>\n","      <td>Многочлен</td>\n","    </tr>\n","    <tr>\n","      <th>4194</th>\n","      <td>Найдите все такие простые числа p и q , что  p...</td>\n","      <td>Теория чисел</td>\n","    </tr>\n","    <tr>\n","      <th>340</th>\n","      <td>В стране больше 101 города. Столица соединена ...</td>\n","      <td>Графы</td>\n","    </tr>\n","    <tr>\n","      <th>2908</th>\n","      <td>Существуют ли такие попарно различные натураль...</td>\n","      <td>Теория чисел</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3819</th>\n","      <td>Может ли число  1·2 + 2·3 + ... + k(k + 1)  пр...</td>\n","      <td>Теория чисел</td>\n","    </tr>\n","    <tr>\n","      <th>3872</th>\n","      <td>По окружности записали красным пять несократим...</td>\n","      <td>Теория чисел</td>\n","    </tr>\n","    <tr>\n","      <th>4160</th>\n","      <td>Докажите, что при простых  p &gt; 7  число  p4 − ...</td>\n","      <td>Теория чисел</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>В государстве 100 городов, и из каждого из них...</td>\n","      <td>Графы</td>\n","    </tr>\n","    <tr>\n","      <th>1713</th>\n","      <td>б) Занумеруем колышки числами 1, 2, 3. Треб...</td>\n","      <td>Комбинаторика</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4218 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7a12a6fc-37e6-4fc2-9e5a-55dd4f347a55')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7a12a6fc-37e6-4fc2-9e5a-55dd4f347a55 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7a12a6fc-37e6-4fc2-9e5a-55dd4f347a55');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-98b9bdaf-8476-4fb3-8fdc-42e3912418df\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-98b9bdaf-8476-4fb3-8fdc-42e3912418df')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-98b9bdaf-8476-4fb3-8fdc-42e3912418df button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_train","summary":"{\n  \"name\": \"df_train\",\n  \"rows\": 4218,\n  \"fields\": [\n    {\n      \"column\": \"text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3595,\n        \"samples\": [\n          \"\\u0421\\u0440\\u0435\\u0434\\u0438 \\u0443\\u0447\\u0430\\u0441\\u0442\\u043d\\u0438\\u043a\\u043e\\u0432 \\u043e\\u043b\\u0438\\u043c\\u043f\\u0438\\u0430\\u0434\\u044b \\u043a\\u0430\\u0436\\u0434\\u044b\\u0439 \\u0437\\u043d\\u0430\\u043a\\u043e\\u043c \\u043d\\u0435 \\u043c\\u0435\\u043d\\u0435\\u0435 \\u0447\\u0435\\u043c \\u0441 \\u0442\\u0440\\u0435\\u043c\\u044f \\u0434\\u0440\\u0443\\u0433\\u0438\\u043c\\u0438. \\u0414\\u043e\\u043a\\u0430\\u0436\\u0438\\u0442\\u0435, \\u0447\\u0442\\u043e \\u043c\\u043e\\u0436\\u043d\\u043e \\u0432\\u044b\\u0431\\u0440\\u0430\\u0442\\u044c \\u0433\\u0440\\u0443\\u043f\\u043f\\u0443 \\u0438\\u0437 \\u0447\\u0451\\u0442\\u043d\\u043e\\u0433\\u043e \\u0447\\u0438\\u0441\\u043b\\u0430 \\u0443\\u0447\\u0430\\u0441\\u0442\\u043d\\u0438\\u043a\\u043e\\u0432 (\\u0431\\u043e\\u043b\\u044c\\u0448\\u0435 \\u0434\\u0432\\u0443\\u0445 \\u0447\\u0435\\u043b\\u043e\\u0432\\u0435\\u043a) \\u0438 \\u043f\\u043e\\u0441\\u0430\\u0434\\u0438\\u0442\\u044c \\u0438\\u0445 \\u0437\\u0430 \\u043a\\u0440\\u0443\\u0433\\u043b\\u044b\\u0439 \\u0441\\u0442\\u043e\\u043b \\u0442\\u0430\\u043a, \\u0447\\u0442\\u043e\\u0431\\u044b \\u043a\\u0430\\u0436\\u0434\\u044b\\u0439 \\u0431\\u044b\\u043b \\u0437\\u043d\\u0430\\u043a\\u043e\\u043c \\u0441 \\u043e\\u0431\\u043e\\u0438\\u043c\\u0438 \\u0441\\u043e\\u0441\\u0435\\u0434\\u044f\\u043c\\u0438. \",\n          \"\\u041d\\u0430 \\u0441\\u0442\\u043e\\u0440\\u043e\\u043d\\u0430\\u0445 \\u043d\\u0435\\u043a\\u043e\\u0442\\u043e\\u0440\\u043e\\u0433\\u043e \\u043c\\u043d\\u043e\\u0433\\u043e\\u0443\\u0433\\u043e\\u043b\\u044c\\u043d\\u0438\\u043a\\u0430 \\u0440\\u0430\\u0441\\u0441\\u0442\\u0430\\u0432\\u043b\\u0435\\u043d\\u044b \\u0441\\u0442\\u0440\\u0435\\u043b\\u043a\\u0438. \\r\\n\\u0414\\u043e\\u043a\\u0430\\u0436\\u0438\\u0442\\u0435, \\u0447\\u0442\\u043e \\u0447\\u0438\\u0441\\u043b\\u043e \\u0432\\u0435\\u0440\\u0448\\u0438\\u043d, \\u0432 \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0435 \\u0432\\u0445\\u043e\\u0434\\u044f\\u0442 \\u0434\\u0432\\u0435 \\u0441\\u0442\\u0440\\u0435\\u043b\\u043a\\u0438, \\u0440\\u0430\\u0432\\u043d\\u043e \\u0447\\u0438\\u0441\\u043b\\u0443 \\u0432\\u0435\\u0440\\u0448\\u0438\\u043d, \\u0438\\u0437 \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0445 \\u0432\\u044b\\u0445\\u043e\\u0434\\u044f\\u0442 \\u0434\\u0432\\u0435 \\u0441\\u0442\\u0440\\u0435\\u043b\\u043a\\u0438.\",\n          \"\\u041c\\u043e\\u0436\\u043d\\u043e \\u043b\\u0438 \\u043e\\u0442\\u043c\\u0435\\u0442\\u0438\\u0442\\u044c k \\u0432\\u0435\\u0440\\u0448\\u0438\\u043d \\u043f\\u0440\\u0430\\u0432\\u0438\\u043b\\u044c\\u043d\\u043e\\u0433\\u043e 14-\\u0443\\u0433\\u043e\\u043b\\u044c\\u043d\\u0438\\u043a\\u0430 \\u0442\\u0430\\u043a, \\u0447\\u0442\\u043e \\u043a\\u0430\\u0436\\u0434\\u044b\\u0439 \\u0447\\u0435\\u0442\\u044b\\u0440\\u0451\\u0445\\u0443\\u0433\\u043e\\u043b\\u044c\\u043d\\u0438\\u043a \\u0441 \\u0432\\u0435\\u0440\\u0448\\u0438\\u043d\\u0430\\u043c\\u0438 \\u0432 \\u043e\\u0442\\u043c\\u0435\\u0447\\u0435\\u043d\\u043d\\u044b\\u0445 \\u0442\\u043e\\u0447\\u043a\\u0430\\u0445, \\u0438\\u043c\\u0435\\u044e\\u0449\\u0438\\u0439 \\u0434\\u0432\\u0435 \\u043f\\u0430\\u0440\\u0430\\u043b\\u043b\\u0435\\u043b\\u044c\\u043d\\u044b\\u0435 \\u0441\\u0442\\u043e\\u0440\\u043e\\u043d\\u044b, \\u044f\\u0432\\u043b\\u044f\\u0435\\u0442\\u0441\\u044f \\u043f\\u0440\\u044f\\u043c\\u043e\\u0443\\u0433\\u043e\\u043b\\u044c\\u043d\\u0438\\u043a\\u043e\\u043c, \\u0435\\u0441\\u043b\\u0438: \\u00a0\\u0430) k = 6; \\u00a0 \\u0431) k \\u2265 7? \"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"\\u041a\\u043e\\u043c\\u0431\\u0438\\u043d\\u0430\\u0442\\u043e\\u0440\\u0438\\u043a\\u0430\",\n          \"\\u041c\\u043d\\u043e\\u0433\\u043e\\u0447\\u043b\\u0435\\u043d\",\n          \"\\u0413\\u0435\\u043e\\u043c\\u0435\\u0442\\u0440\\u0438\\u044f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":75}]},{"cell_type":"code","source":[],"metadata":{"id":"SUWDiRSE7jTD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["batch_size = 32\n","train_dataloader = DataLoader(\n","    train_dataset, shuffle=True, collate_fn=collate_fn_with_padding, batch_size=batch_size)\n","\n","eval_dataloader = DataLoader(\n","    eval_dataset, shuffle=False, collate_fn=collate_fn_with_padding, batch_size=batch_size)"],"metadata":{"id":"FhFAOABu2eSZ","executionInfo":{"status":"ok","timestamp":1711978193560,"user_tz":-180,"elapsed":2,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}}},"execution_count":62,"outputs":[]},{"cell_type":"code","source":["# index = 3\n","# print(train_dataset[index]['text'])"],"metadata":{"id":"wyEmeQXz2i7J","executionInfo":{"status":"ok","timestamp":1711979506120,"user_tz":-180,"elapsed":494,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}}},"execution_count":72,"outputs":[]},{"cell_type":"markdown","source":["### Задание 1 (2 балла)\n","\n","Напишите кастомный класс для модели трансформера для задачи классификации, использующей в качествке backbone какую-то из моделей huggingface.\n","\n","Т.е. конструктор класса должен принимать на вход название модели и подгружать её из huggingface, а затем использовать в качестве backbone (достаточно возможности использовать в качестве backbone те модели, которые упомянуты в последующих пунктах)"],"metadata":{"id":"t395freCxpOE"}},{"cell_type":"code","source":[],"metadata":{"id":"s9u6_KNmuvRu","executionInfo":{"status":"ok","timestamp":1711970305185,"user_tz":-180,"elapsed":6913,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","source":["### This is just an interface example. You may change it if you want.\n","\n","class TransformerClassificationModel(nn.Module):\n","    def __init__(self, num_classes):\n","        self.backbone = DistilBertModel.from_pretrained('distilbert-base-uncased')\n","        self.drop = nn.Dropout(p=0.2)\n","        self.fc = nn.Linear(self.backbone.config.hidden_size, num_classes)\n","        # YOUR CODE: create additional layers for classfication\n","\n","    def forward(self, inputs, attention_mask):\n","        # YOUR CODE: propagate inputs through the model. Return dict with logits\n","        _, pooled_output = self.backbone(input_ids=inputs, attention_mask=attention_mask)\n","        outputs = self.fc(pooled_output)\n","        return outputs\n","\n","    def freeze_backbone(self):\n","        for param in self.backbone.parameters():\n","            param.requires_grad = False\n","\n","    def unfreeze_backbone(self):\n","        for param in self.backbone.parameters():\n","            param.requires_grad = True"],"metadata":{"id":"eX4VGWquyiMx","executionInfo":{"status":"ok","timestamp":1711970305188,"user_tz":-180,"elapsed":20,"user":{"displayName":"Pavel Oskin","userId":"12795831590389692658"}}},"execution_count":2,"outputs":[]},{"cell_type":"markdown","source":["### Задание 2 (1 балл)\n","\n","Напишите функцию заморозки backbone у модели (если необходимо, возвращайте из функции модель)"],"metadata":{"id":"Vd3kxX6hy0d4"}},{"cell_type":"code","source":["def freeze_backbone_function(model: TransformerClassificationModel):\n","    pass"],"metadata":{"id":"U8IuDosbzKe8"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Задание 3 (2 балла)\n","\n","Напишите функцию, которая будет использована для тренировки (дообучения) трансформера (TransformerClassificationModel). Функция должна поддерживать обучение с замороженным и размороженным backbone."],"metadata":{"id":"kybkw6MSzd-K"}},{"cell_type":"code","source":["import copy\n","\n","def train_transformer(transformer_model, freeze_backbone=True)\n","    model = copy.copy(transformer_model)\n","    ### YOUR CODE IS HERE\n","\n","    losses = []\n","    for epoch in range(epochs):\n","        epoch_losses = []\n","        model.train()\n","\n","    return finetuned_model"],"metadata":{"id":"EDhrD0BHzxi4"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Задание 4 (1 балл)\n","\n","Проверьте вашу функцию из предыдущего пункта, дообучив двумя способами\n","*cointegrated/rubert-tiny2* из huggingface."],"metadata":{"id":"eUqhI4mV_RTI"}},{"cell_type":"code","source":["rubert_tiny_transformer_model = #...\n","rubert_tiny_finetuned_with_freezed_backbone = train_transformer(rubert_tiny_transformer_model, freeze_backbone=True)\n","\n","rubert_tiny_transformer_model = #...\n","rubert_tiny_full_finetuned = train_transformer(rubert_tiny_transformer_model, freeze_backbone=False)"],"metadata":{"id":"nuxOCBQHAKZC"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Задание 5 (1 балл)\n","\n","Обучите *tbs17/MathBert* (с замороженным backbone и без заморозки), проанализируйте результаты. Сравните скоры с первым заданием. Получилось лучше или нет? Почему?"],"metadata":{"id":"zRi7tkoOAjon"}},{"cell_type":"code","source":["### YOUR CODE IS HERE (probably, similar on the previous step)"],"metadata":{"id":"XKtd3YgNA14E"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Задание 6 (1 балл)\n","\n","Напишите функцию для отрисовки карт внимания первого слоя для моделей из задания"],"metadata":{"id":"EuU6Di26017B"}},{"cell_type":"code","source":["def draw_first_layer_attention_maps(attention_head_ids: List, text: str, model: TransformerClassificationModel):\n","    pass"],"metadata":{"id":"guzGxfcV1Cba"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Задание 7 (1 балл)\n","\n","Проведите инференс для всех моделей **ДО ДООБУЧЕНИЯ** на 2-3 текстах из датасета. Посмотрите на головы Attention первого слоя в каждой модели на выбранных текстах (отрисуйте их отдельно).\n","\n","Попробуйте их проинтерпретировать. Какие связи улавливают карты внимания? (если в модели много голов Attention, то проинтерпретируйте наиболее интересные)"],"metadata":{"id":"Iu0adKw4BLtF"}},{"cell_type":"code","source":["### YOUR CODE IS HERE"],"metadata":{"id":"U2gEF3vkB6eR"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Задание 8 (1 балл)\n","\n","Сделайте то же самое для дообученных моделей. Изменились ли карты внимания и связи, которые они улавливают? Почему?"],"metadata":{"id":"pBNVrOpCCLqk"}},{"cell_type":"code","source":["### YOUR CODE IS HERE"],"metadata":{"id":"F5229WBICWEr"},"execution_count":null,"outputs":[]}]}